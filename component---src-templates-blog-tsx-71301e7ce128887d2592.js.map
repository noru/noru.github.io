{"version":3,"sources":["webpack:///./src/templates/Blog.tsx","webpack:///./src/utils/media.ts","webpack:///./config/SiteConfig.ts","webpack:///./src/components/Subline.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./config/Theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SectionTitle.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Content.tsx","webpack:///./src/components/Title.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/DemoWrapper.tsx","webpack:///./src/components/index.tsx"],"names":["BlogPage","render","_this$props$pageConte","this","props","pageContext","currentPage","totalPages","_data$allMarkdownRema","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","uppercase","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","url","React","Component","BlogQuery","__webpack_require__","d","__webpack_exports__","media","tablet","phone","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","GA_ID","Google_Tag_Manager_ID","POST_PER_PAGE","aboutMe","Subline","styled","div","withConfig","displayName","componentId","theme","fontSize","small","light","rgba","colors","white","sectionTitle","Post","article","Title","h2","Initiale","span","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","firstChar","charAt","react_default","gatsby_browser_entry","kebabCase","PureComponent","Button","button","primary","big","transitions","normal","curriedDarken","HeaderWrapper","header","darken","lighten","grey","dark","banner","Content","Header","children","Theme","bg","default","ultraLight","link","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Layout","_proto","componentDidMount","document","querySelectorAll","forEach","element","script","innerHTML","window","eval","e","console","error","info","query","styled_components_browser_esm","Fragment","split","site","buildTime","href","_1536950682","Wrapper","Prev","Next","PrevNext","prev","next","SectionTitle","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","fullWidth","h3","PaginationContainer","PaginationContent","Pagination","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","length","_","i","DemoWrapper","_React$Component","width","src","isImage","style","height","transformOrigin","transform","calculateScale","target","pointerEvents","marginBottom","frameBorder","onError","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content","Title_Title","Pagination_Pagination","DemoWrapper_DemoWrapper"],"mappings":"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","file":"component---src-templates-blog-tsx-71301e7ce128887d2592.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport { Layout, Article, Wrapper, SectionTitle, Header, Content, Pagination } from '../components'\r\nimport Helmet from 'react-helmet'\r\nimport config from '../../config/SiteConfig'\r\nimport Data from '../models/Data'\r\n\r\ninterface Props {\r\n  data: Data\r\n  pageContext: {\r\n    currentPage: number;\r\n    totalPages: number;\r\n  }\r\n}\r\n\r\nexport default class BlogPage extends React.Component<Props> {\r\n\r\n  render() {\r\n    const { currentPage, totalPages } = this.props.pageContext\r\n    const { data } = this.props\r\n    const { edges, totalCount } = data.allMarkdownRemark\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet title={`Blog | ${config.siteTitle}`} />\r\n        <Header>\r\n          <Link to=\"/\">{config.siteTitle}</Link>\r\n          <SectionTitle uppercase={true}>Latest stories ({totalCount})</SectionTitle>\r\n        </Header>\r\n        <Wrapper>\r\n          <Content>\r\n            {edges.map(post => (\r\n              <Article\r\n                title={post.node.frontmatter.title}\r\n                date={post.node.frontmatter.date}\r\n                excerpt={post.node.excerpt}\r\n                timeToRead={post.node.timeToRead}\r\n                slug={post.node.fields.slug}\r\n                category={post.node.frontmatter.category}\r\n                key={post.node.fields.slug}\r\n              />\r\n            ))}\r\n            <Pagination currentPage={currentPage} totalPages={totalPages} url={'blog'} />\r\n          </Content>\r\n        </Wrapper>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport const BlogQuery = graphql`\r\n  query($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD.MM.YYYY\")\r\n            category\r\n          }\r\n          excerpt(pruneLength: 200)\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const sizes = {\r\n  tablet: '1200px',\r\n  phone: '600px',\r\n}\r\n\r\nexport const media = {\r\n  tablet: `(max-width: ${sizes.tablet})`,\r\n  phone: `(max-width: ${sizes.phone})`,\r\n}\r\n","export default {\r\n  pathPrefix: '/',\r\n  siteTitle: 'Drew\\'s Workbench', // Navigation and Site Title\r\n  siteTitleAlt: '', // Alternative Site title for SEO\r\n  siteUrl: 'https://blog.xiuz.hu', // Domain of your site. No trailing slash!\r\n  siteLanguage: 'en', // Language Tag on <html> element\r\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\r\n  defaultBg: '/assets/bg.png', // default post background header\r\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\r\n  siteDescription: '', // Your site description\r\n  author: 'Drew Xiu', // Author for schemaORGJSONLD\r\n  siteLogo: '/assets/logo.jpg', // Image for schemaORGJSONLD\r\n\r\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\r\n  userTwitter: '@drew_xiu', // Twitter Username - Optional\r\n  ogSiteName: 'Drew.Xiu', // Facebook Site Name - Optional\r\n  ogLanguage: 'en_US', // Facebook Language\r\n\r\n  // Manifest and Progress color\r\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\r\n  themeColor: '#3498DB',\r\n  backgroundColor: '#2b2e3c',\r\n\r\n  // Settings for typography.ts\r\n  headerFontFamily: 'Bitter',\r\n  bodyFontFamily: 'Open Sans',\r\n  baseFontSize: '18px',\r\n\r\n  // Social media\r\n  siteFBAppID: '',\r\n\r\n  GA_ID: 'UA-135755854-1',\r\n  Google_Tag_Manager_ID: 'GTM-PHXXCX7',\r\n  POST_PER_PAGE: 6,\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  aboutMe: 'A untalented gamer / kinda-okay web developer / lousy full-stack engineer / kick-ass modeler (aircraft only) / amature drummer / safty-first sk8boi',\r\n}\r\n","import styled from 'styled-components'\r\nimport rgba from 'polished/lib/color/rgba'\r\n\r\ninterface Props {\r\n  theme: {\r\n    fontSize: {\r\n      small: number;\r\n      big: number;\r\n    };\r\n    colors: {\r\n      white: string;\r\n      grey: {\r\n        light: string;\r\n      };\r\n    };\r\n  }\r\n  sectionTitle: string\r\n  light: boolean\r\n}\r\n\r\nexport const Subline: any = styled.div`\r\n  font-size: ${(props: Props) => props.theme.fontSize.small};\r\n  ${(props: Props) => props.light && `color: ${rgba(props.theme.colors.white, 0.7)}`};\r\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\nimport { Subline } from './Subline'\r\nimport { media } from '../utils/media'\r\n\r\nconst Post = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  position: relative;\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  margin-bottom: 0.75rem;\r\n  font-size: 1.5rem;\r\n  @media ${media.phone} {\r\n    font-size: 1.2rem;\r\n  }\r\n`\r\n\r\nconst Initiale = styled.span`\r\n  position: absolute;\r\n  font-size: 5rem;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0.08;\r\n  user-select: none;\r\n  z-index: -1;\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  grid-column: -1 / 1;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\ninterface Props {\r\n  title: string\r\n  date: string\r\n  excerpt: string\r\n  slug: string\r\n  timeToRead: number\r\n  category: string\r\n}\r\n\r\nexport class Article extends React.PureComponent<Props> {\r\n\r\n  render() {\r\n    const { title, date, excerpt, slug, timeToRead, category } = this.props\r\n    const firstChar = title.charAt(0)\r\n\r\n    return (\r\n      <Post>\r\n        <Title>\r\n          <Initiale>{firstChar}</Initiale>\r\n          <Link to={`/blog/${slug}`}>{title}</Link>\r\n        </Title>\r\n        <Subline>\r\n          {date} &mdash; {timeToRead} Min Read &mdash; In\r\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\r\n        </Subline>\r\n        <Excerpt>{excerpt}</Excerpt>\r\n      </Post>\r\n    )\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport curriedDarken from 'polished/lib/color/darken'\r\n\r\nexport const Button: any = styled.button`\r\n  background: ${props => props.theme.colors.primary};\r\n  border: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin: 0 0.5rem;\r\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\r\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\r\n  color: white;\r\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\r\n  transition: all ${(props: any) => props.theme.transitions.normal};\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  &:hover {\r\n    background: ${(props: any) => curriedDarken(0.3, props.theme.colors.primary)};\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 0.75rem;\r\n    fill: white;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { darken, lighten } from 'polished'\r\nimport rgba from 'polished/lib/color/rgba'\r\nimport { media } from '../utils/media'\r\nimport config from '../../config/SiteConfig'\r\n\r\nconst HeaderWrapper: any = styled.header`\r\n  position: relative;\r\n  background: linear-gradient(\r\n      -185deg,\r\n      ${props => rgba(darken(0.1, props.theme.colors.primary), 0.6)},\r\n      ${props => rgba(lighten(0.1, props.theme.colors.grey.dark), 0.8)}\r\n    ),\r\n    url(${(props: any) => props.banner}) no-repeat;\r\n  background-size: cover;\r\n  padding: 3rem 2rem 8rem;\r\n  text-align: center;\r\n  ::after {\r\n    // background: transparent url(/assets/mask.svg) no-repeat bottom left;\r\n    background-size: 101%;\r\n    bottom: -2px;\r\n    content: '';\r\n    display: block;\r\n    height: 100%;\r\n    left: 0;\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n  @media ${media.tablet} {\r\n    padding: 2rem 2rem 3rem;\r\n  }\r\n  @media ${media.phone} {\r\n    padding: 1rem 0.5rem 2rem;\r\n  }\r\n`\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  z-index: 999;\r\n  a {\r\n    color: white;\r\n    &:hover {\r\n      opacity: 0.85;\r\n      color: white;\r\n    }\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  children: any\r\n  banner?: string\r\n}\r\n\r\nexport class Header extends React.PureComponent<Props> {\r\n  render() {\r\n    return (\r\n      <HeaderWrapper banner={this.props.banner || config.defaultBg}>\r\n        <Content>{this.props.children}</Content>\r\n      </HeaderWrapper>\r\n    )\r\n  }\r\n}\r\n","const colors = {\r\n  primary: '#98c0e4', // Color for buttons or links\r\n  bg: '#494f5c', // Background color\r\n  white: '#fff',\r\n  grey: {\r\n    dark: 'rgba(0, 0, 0, 0.9)',\r\n    default: '#c6cdda',\r\n    light: 'rgba(0, 0, 0, 0.5)',\r\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\r\n  },\r\n  link: '#98c0e4',\r\n}\r\n\r\nconst transitions = {\r\n  normal: '0.5s',\r\n}\r\n\r\nconst fontSize = {\r\n  small: '0.9rem',\r\n  big: '1.9rem',\r\n}\r\n\r\nexport default {\r\n  colors,\r\n  transitions,\r\n  fontSize,\r\n}\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components'\r\nimport theme from '../../config/Theme'\r\nimport { media } from '../utils/media'\r\nimport split from 'lodash/split'\r\nimport './layout.scss'\r\nimport './main.scss'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background: ${theme.colors.primary};\r\n  }\r\n  body {\r\n    background: ${theme.colors.bg};\r\n    color: ${theme.colors.grey.default};\r\n    @media ${media.phone} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${theme.colors.link};\r\n    text-decoration: none;\r\n    transition: all ${theme.transitions.normal};\r\n  }\r\n  @keyframes hoverme {\r\n    0%, 100% { color: #7ccdea; }\r\n    16%      { color: #0074D9; }\r\n    32%      { color: #2ECC40; }\r\n    48%      { color: #FFDC00; }\r\n    64%      { color: #B10DC9; }\r\n    80%      { color: #FF4136; }\r\n  }\r\n  a:hover {\r\n    animation: hoverme 3s infinite;\r\n  }\r\n  h1, h2, h3, h4 {\r\n    color: white;\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .25rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  .textRight {\r\n    text-align:right;\r\n  }\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 0;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`\r\n\r\nexport class Layout extends React.PureComponent<{}> {\r\n  componentDidMount() {\r\n    let scripts = document.querySelectorAll('[data-inline-script]')\r\n    scripts.forEach(function forEachScript(element) {\r\n      const script = element.innerHTML\r\n      try {\r\n        window.eval(script)\r\n      } catch (e) {\r\n        console.error(e)\r\n        console.info('Script with errors:\\n', script)\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query LayoutQuery {\r\n            site {\r\n              buildTime(formatString: \"DD.MM.YYYY\")\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <ThemeProvider theme={theme}>\r\n            <React.Fragment>\r\n              <GlobalStyle />\r\n              {children}\r\n              <Footer>\r\n                {/* tslint:disable-next-line:max-line-length */}\r\n                <span>\r\n                  &copy; {split(data.site.buildTime, '.')[2]} by Drew Xiu. All rights <s>reserved</s> for sale.\r\n                </span>\r\n                <br />\r\n                <a href=\"https://github.com/noru/blog\">GitHub Repo</a> <br />\r\n                <span>Last build: {data.site.buildTime}</span>\r\n              </Footer>\r\n            </React.Fragment>\r\n          </ThemeProvider>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\nimport Post from '../models/Post'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 3rem auto;\r\n  a {\r\n    color: ${props => props.theme.colors.primary};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  justify-items: center;\r\n`\r\n\r\nconst Prev = styled.div`\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: lightgray;\r\n  }\r\n`\r\n\r\nconst Next = styled.div`\r\n  margin-left: auto;\r\n  text-align: right;\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: lightgray;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  next: Post\r\n  prev: Post\r\n}\r\n\r\nexport class PrevNext extends React.PureComponent<Props> {\r\n  render() {\r\n    const { prev, next } = this.props\r\n    return (\r\n      <Wrapper>\r\n        {prev && (\r\n          <Prev>\r\n            <span>Previous</span>\r\n            <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\r\n          </Prev>\r\n        )}\r\n        {next && (\r\n          <Next>\r\n            <span>Next</span>\r\n            <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\r\n          </Next>\r\n        )}\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const SectionTitle: any = styled.div`\r\n  font-size: ${props => props.theme.fontSize.big};\r\n  text-transform: ${(props: any) => (props.uppercase ? 'uppercase' : 'normal')};\r\n  text-align: center;\r\n  color: ${props => props.theme.colors.white};\r\n  position: relative;\r\n  padding: 2rem 0 0;\r\n  margin-bottom: 2rem;\r\n  &:after {\r\n    content: '';\r\n    height: 1px;\r\n    width: 50px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    margin-left: -25px;\r\n    background: ${props => props.theme.colors.white};\r\n  }\r\n`\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport config from '../../config/SiteConfig'\r\nimport Post from '../models/Post'\r\n\r\ninterface SEO {\r\n  postNode: Post\r\n  postPath: string\r\n  postSEO: boolean\r\n}\r\n\r\nexport const SEO = (props: SEO) => {\r\n  const { postNode, postPath, postSEO } = props\r\n  let title\r\n  let description\r\n  let image\r\n  let postURL\r\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\r\n  if (postSEO) {\r\n    const postMeta = postNode.frontmatter\r\n    title = postMeta.title\r\n    description = postNode.excerpt\r\n    image = config.siteBanner\r\n    postURL = config.siteUrl + realPrefix + postPath\r\n  } else {\r\n    title = config.siteTitle\r\n    description = config.siteDescription\r\n    image = config.siteBanner\r\n  }\r\n  image = config.siteUrl + realPrefix + image\r\n  const blogURL = config.siteUrl + config.pathPrefix\r\n  let schemaOrgJSONLD = [\r\n    {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'WebSite',\r\n      '@id': blogURL,\r\n      'url': blogURL,\r\n      'name': title,\r\n      'alternateName': config.siteTitleAlt ? config.siteTitleAlt : '',\r\n    },\r\n  ]\r\n  if (postSEO) {\r\n    schemaOrgJSONLD = [\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'BlogPosting',\r\n        // @ts-ignore\r\n        '@id': postURL,\r\n        // @ts-ignore\r\n        'url': postURL,\r\n        'name': title,\r\n        'alternateName': config.siteTitleAlt ? config.siteTitleAlt : '',\r\n        'headline': title,\r\n        'image': {\r\n          '@type': 'ImageObject',\r\n          'url': image,\r\n        },\r\n        'description': config.siteDescription,\r\n        'datePublished': postNode.frontmatter.date,\r\n        'dateModified': postNode.frontmatter.date,\r\n        'author': {\r\n          '@type': 'Person',\r\n          'name': config.author,\r\n        },\r\n        'publisher': {\r\n          '@type': 'Organization',\r\n          'name': config.author,\r\n          'logo': {\r\n            '@type': 'ImageObject',\r\n            'url': config.siteUrl + realPrefix + config.siteLogo,\r\n          },\r\n        },\r\n        'isPartOf': blogURL,\r\n        'mainEntityOfPage': {\r\n          '@type': 'WebSite',\r\n          '@id': blogURL,\r\n        },\r\n      },\r\n    ]\r\n  }\r\n  return (\r\n    <Helmet>\r\n      <html lang={config.siteLanguage} />\r\n      <title>{config.siteTitle}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"image\" content={image} />\r\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\r\n      <meta property=\"og:locale\" content={config.ogLanguage} />\r\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\r\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:url\" content={config.siteUrl} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { media } from '../utils/media'\r\n\r\nexport const Wrapper: any = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: ${(props: any) => (props.fullWidth ? '100%' : '100rem')};\r\n  padding: ${(props: any) => (props.fullWidth ? '0' : '0 6rem')};\r\n  @media ${media.tablet} {\r\n    padding: ${(props: any) => (props.fullWidth ? '0' : '0 3rem')};\r\n  }\r\n  @media ${media.phone} {\r\n    padding: ${(props: any) => (props.fullWidth ? '0' : '0 1rem')};\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { media } from '../utils/media'\r\n\r\nexport const Content = styled.div`\r\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\r\n  border-radius: 1rem;\r\n  padding: 0rem 4rem;\r\n  background-color: ${props => props.theme.colors.bg};\r\n  z-index: 9000;\r\n  margin-top: -1.5rem;\r\n  form {\r\n    p {\r\n      label,\r\n      input {\r\n        display: block;\r\n      }\r\n      input {\r\n        min-width: 275px;\r\n      }\r\n      textarea {\r\n        resize: vertical;\r\n        min-height: 150px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  @media ${media.tablet} {\r\n    padding: 1rem 1.5rem;\r\n  }\r\n  @media ${media.phone} {\r\n    padding: 1rem 1.5rem;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h3`\r\n  position: relative;\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  margin-bottom: 0.75rem;\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport { media } from '../utils/media'\r\nimport theme from '../../config/Theme'\r\nimport curriedDarken from 'polished/lib/color/darken'\r\n\r\nexport const PaginationContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem;\r\n  }\r\n`\r\n\r\nexport const PaginationContent = styled.div`\r\n  display: inline-block;\r\n  padding: 0 1.5rem;\r\n  border-radius: .5rem;\r\n  background-color: #eee;\r\n\r\n    @media ${media.phone} {\r\n    padding: 0 1rem;\r\n    }\r\n\r\n  .page-numbers {\r\n    display: block;\r\n    float:left;\r\n    transition: 400ms ease;\r\n    color: ${theme.colors.grey.light};\r\n    letter-spacing: 0.1em;\r\n    padding: .2rem .5rem;\r\n    &:hover,\r\n    &.current {\r\n      background-color: darkgray;\r\n      color: ${theme.colors.white};\r\n    }\r\n\r\n    &.prev {\r\n      margin-left: -1.5rem;\r\n    }\r\n\r\n    &.next {\r\n      margin-right: -1.5rem;\r\n    }\r\n\r\n    &.prev:hover,\r\n    &.next:hover {\r\n      background-color: transparent;\r\n      color: ${curriedDarken(0.2, theme.colors.primary)};\r\n    }\r\n\r\n\r\n    @media ${media.tablet} {\r\n      padding: 0 1.4rem;\r\n      display: none;\r\n\r\n      &:nth-of-type(2) {\r\n        position: relative;\r\n        padding-right: 5rem;\r\n\r\n        &::after {\r\n          content: '...';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 4.5rem;\r\n        }\r\n      }\r\n\r\n      &:nth-child(-n + 3),\r\n      &:nth-last-child(-n + 3) {\r\n        display: block;\r\n      }\r\n\r\n      &:nth-last-child(-n + 4) {\r\n        padding-right: 1.4rem;\r\n\r\n        &::after {\r\n          content: none;\r\n        }\r\n      }\r\n    }\r\n  `\r\n\r\ninterface Props {\r\n  currentPage: number\r\n  totalPages: number\r\n  url: string\r\n}\r\n\r\nexport class Pagination extends React.PureComponent<Props> {\r\n  render() {\r\n    const { currentPage, totalPages, url } = this.props\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === totalPages\r\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`\r\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`\r\n    return totalPages > 1 ? (\r\n      <PaginationContainer>\r\n        <PaginationContent>\r\n          {!isFirst && (\r\n            <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">⯇</Link>\r\n          )}\r\n          {Array.from({ length: totalPages }, (_, i) => (\r\n            <Link\r\n              className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\r\n              key={`pagination-number${i + 1}`}\r\n              to={`/${url}/${i === 0 ? '' : i + 1}`}\r\n            >\r\n              {i + 1}\r\n            </Link>\r\n          ))}\r\n          {!isLast && (\r\n            <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">⯈</Link>\r\n          )}\r\n        </PaginationContent>\r\n      </PaginationContainer>\r\n    ) : null\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nfunction calculateScale(width: number) {\r\n  return width / 1440\r\n}\r\n\r\nconst RATIO = 1440 / 900\r\n\r\nexport class DemoWrapper extends React.Component<{ width: number, src: string, link?: string, isImage?: boolean }, {}> {\r\n  render() {\r\n    let { width, src, link, isImage } = this.props\r\n    let scale = calculateScale(width)\r\n    let style = {\r\n      width: 1440,\r\n      height: 900,\r\n      transformOrigin: '0 0',\r\n      transform: `scale(${scale})`,\r\n    }\r\n    return (\r\n      <a target=\"_blank\" href={link || src}>\r\n        <div style={{ width, height: width / RATIO, pointerEvents: 'none', marginBottom: '35px' }}>\r\n          { isImage ?\r\n            <img src={src}/> :\r\n            <iframe src={src} frameBorder=\"0\" style={style} onError={console.error}></iframe>\r\n          }\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n","export * from './Article'\r\nexport * from './Button'\r\nexport * from './Header'\r\nexport * from './Layout'\r\nexport * from './PrevNext'\r\nexport * from './SectionTitle'\r\nexport * from './SEO'\r\nexport * from './Subline'\r\nexport * from './Wrapper'\r\nexport * from './Content'\r\nexport * from './Title'\r\nexport * from './Pagination'\r\nexport * from './DemoWrapper'"],"sourceRoot":""}