{"version":3,"sources":["webpack:///./node_modules/polished/lib/color/lighten.js","webpack:///./src/pages/index.tsx"],"names":["exports","__esModule","_curry","_interopRequireDefault","_guard","_parseToHsl","_toColorString","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","lighten","amount","color","hslColor","lightness","parseFloat","_default","module","Button","styled","Btn","SiteLogo","img","Homepage","main","media","tablet","phone","GridRow","div","props","background","rgba","darken","theme","colors","primary","grey","dark","white","HomepageContent","center","IndexPage","render","data","allMarkdownRemark","edges","totalCount","fullWidth","title","config","siteTitle","src","siteLogo","style","aboutMe","to","big","name","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","className","React","Component","IndexQuery"],"mappings":"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","file":"component---src-pages-index-tsx-5657891dd11ba0158e3d.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _curry = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_curry\"));\n\nvar _guard = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_guard\"));\n\nvar _parseToHsl = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./parseToHsl\"));\n\nvar _toColorString = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./toColorString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * Returns a string value for the lightened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: lighten(0.2, '#CCCD64'),\n *   background: lighten('0.2', 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${lighten(0.2, '#FFCD64')};\n *   background: ${lighten('0.2', 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e5e6b1\";\n *   background: \"rgba(229,230,177,0.7)\";\n * }\n */\n\n\nfunction lighten(amount, color) {\n  var hslColor = (0, _parseToHsl[\"default\"])(color);\n  return (0, _toColorString[\"default\"])(_extends({}, hslColor, {\n    lightness: (0, _guard[\"default\"])(0, 1, hslColor.lightness + parseFloat(amount))\n  }));\n} // prettier-ignore\n\n\nvar curriedLighten = /*#__PURE__*/(0, _curry[\"default\"]\n/* ::<number | string, string, string> */\n)(lighten);\nvar _default = curriedLighten;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { Layout, Wrapper, Button as Btn, Article } from '../components'\nimport FA from 'react-fontawesome'\nimport PageProps from '../models/PageProps'\nimport Helmet from 'react-helmet'\nimport config from '../../config/SiteConfig'\nimport { media } from '../utils/media'\nimport rgba from 'polished/lib/color/rgba'\nimport darken from 'polished/lib/color/darken'\nimport lighten from 'polished/lib/color/lighten'\nimport { Link } from '../components/Link'\n\nconst Button = styled(Btn)`\n  padding: 0.5em 1em;\n  justify-content: center;\n  min-width: 7em;\n`\n\nconst SiteLogo = styled.img`\n  width: 150px;\n  border-radius: 43px;\n  filter: drop-shadow(2px 10px 14px black);\n`\n\nconst Homepage = styled.main`\n  display: flex;\n  height: 100vh;\n  flex-direction: row;\n  @media ${media.tablet} {\n    height: 100%;\n    flex-direction: column;\n  }\n  @media ${media.phone} {\n    height: 100%;\n    flex-direction: column;\n  }\n`\n\nconst GridRow: any = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${(props: any) =>\n    props.background\n      ? `linear-gradient(\n      -185deg,\n      ${rgba(darken(0.1, props.theme.colors.primary), 0.7)},\n      ${rgba(lighten(0.1, props.theme.colors.grey.dark), 0.9)}), url(/assets/bg/5.jpg) no-repeat`\n      : null};\n  background-size: cover;\n  padding: 2rem 4rem;\n  color: ${(props: any) => (props.background ? props.theme.colors.white : null)};\n  h1 {\n    color: ${(props: any) => (props.background ? props.theme.colors.white : null)};\n    @media ${media.phone} {\n      font-size: 2rem;\n    }\n  }\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`\n\nconst HomepageContent: any = styled.div`\n  max-width: 30rem;\n  text-align: ${(props: any) => (props.center ? 'center' : 'left')};\n\n  button {\n    @media ${media.phone} {\n      font-size: 1rem;\n      margin-bottom: 1rem;\n      min-width: 12em;\n    }\n  }\n`\n\nexport default class IndexPage extends React.Component<PageProps> {\n  render() {\n    const { data } = this.props\n    const { edges, totalCount } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <Wrapper fullWidth={true}>\n          <Helmet title={`Homepage | ${config.siteTitle}`} />\n          <Homepage>\n            <GridRow background>\n              <HomepageContent center>\n                <SiteLogo src={config.siteLogo} />\n                <h1>\n                  <a style={{ color: 'white' }}>\n                    Hi. I am <br />\n                    Drew Xiu\n                  </a>\n                </h1>\n                <p>{config.aboutMe}</p>\n                <Link to=\"/contact\">\n                  <Button big>\n                    <FA name=\"phone\" />\n                    <span>Contact</span>\n                  </Button>\n                </Link>\n                <Link to=\"/blog\">\n                  <Button big>\n                    <FA name=\"rss\" />\n                    <span>Blog</span>\n                  </Button>\n                </Link>\n                <Link to=\"/demo\">\n                  <Button big>\n                    <FA name=\"hand-o-up\" />\n                    <span>Demo</span>\n                  </Button>\n                </Link>\n              </HomepageContent>\n            </GridRow>\n            <GridRow>\n              <HomepageContent>\n                <h2>Latest Blog</h2>\n                <br />\n                {edges.map(post => (\n                  <Article\n                    title={post.node.frontmatter.title}\n                    date={post.node.frontmatter.date}\n                    excerpt={post.node.excerpt}\n                    timeToRead={post.node.timeToRead}\n                    slug={post.node.fields.slug}\n                    category={post.node.frontmatter.category}\n                    key={post.node.fields.slug}\n                  />\n                ))}\n                <p className={'textRight'}>\n                  <Link to={'/blog'}>All articles ({totalCount})</Link>\n                </p>\n              </HomepageContent>\n            </GridRow>\n          </Homepage>\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\nexport const IndexQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n      filter: {\n        frontmatter: { category: { ne: \"resume\" } }\n        fields: { draft: { eq: false } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}