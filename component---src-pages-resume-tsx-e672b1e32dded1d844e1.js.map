{"version":3,"sources":["webpack:///./node_modules/@drewxiu/utils/src/object.ts","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/pages/resume.tsx","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/@drewxiu/utils/src/is.ts","webpack:///./node_modules/@drewxiu/utils/src/index.ts","webpack:///./node_modules/@drewxiu/utils/src/math.ts","webpack:///./node_modules/@drewxiu/utils/src/string.ts"],"names":["defaults","original","prop","defaultVal","Error","undefined","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","end","endPos","Wrapper","styled","div","Corner","Content","Download","a","Modal","ResumePage","state","showModal","url","render","props","search","location","allMarkdownRemark","data","parseQuery","utm_source","tag","lang","window","href","edges","filter","e","node","frontmatter","resume","tags","includes","title","to","onClick","setState","className","alert","gen","prompt","navigator","clipboard","writeText","then","print","src","alt","dangerouslySetInnerHTML","__html","html","React","PureComponent","postQuery","$export","P","fill","isPremitive","obj","isNumber","testee","isArray","Array","Object","prototype","toString","call","isUndefinedOrNull","param","isEmpty","key","hasOwnProperty","Math","PI","queryString","query","substr","split","decodeURIComponent","propVal","val","push"],"mappings":"wLAAA,sDA2KO,SAASA,EACdC,EACAC,EACAC,GAGA,GAAwB,iBAAbF,EACT,MAAMG,MAAM,gDAAgDH,GAM9D,YAHYI,IADFJ,EAASC,KAEjBD,EAASC,GAAQC,GAEZF,I,mLCtLT,IAAIK,EAAW,EAAQ,QACnBC,EAAkB,EAAQ,QAC1BC,EAAW,EAAQ,QACvBC,EAAOC,QAAU,SAAcC,GAO7B,IANA,IAAIC,EAAIN,EAASO,MACbC,EAASN,EAASI,EAAEE,QACpBC,EAAOC,UAAUF,OACjBG,EAAQV,EAAgBQ,EAAO,EAAIC,UAAU,QAAKX,EAAWS,GAC7DI,EAAMH,EAAO,EAAIC,UAAU,QAAKX,EAChCc,OAAiBd,IAARa,EAAoBJ,EAASP,EAAgBW,EAAKJ,GACxDK,EAASF,GAAOL,EAAEK,KAAWN,EACpC,OAAOC,I,iQCFT,IAAMQ,EAAUC,IAAOC,IAAV,sEAAGD,CAAH,mCAKPE,EAASF,IAAOC,IAAV,qEAAGD,CAAH,8KAiBNG,EAAUH,IAAOC,IAAV,sEAAGD,CAAH,oEAOPI,EAAWJ,IAAOK,EAAV,uEAAGL,CAAH,mKAcRM,EAAQN,IAAOC,IAAV,oEAAGD,CAAH,gaA6CUO,E,4JACnBC,MAAQ,CACNC,WAAW,EACXC,SAAK1B,G,4GAGP2B,OAAA,WAAS,aACkBnB,KAAKgB,MAAxBC,EADC,EACDA,UAAWC,EADV,EACUA,IADV,EAKHlB,KAAKoB,MAFKC,EAHP,EAGLC,SAAYD,OACJE,EAJH,EAILC,KAAQD,kBAJH,EAMgCE,qBAAWJ,GAA5CK,EANC,EAMDA,WAAYC,EANX,EAMWA,IANX,IAMgBC,YANhB,MAMuB,KANvB,EAOP,IAAKF,EAEH,MADkB,oBAAXG,SAA2BA,OAAOP,SAASQ,KAAO,KAClD,KAET,IAAIC,EAAQR,EAAkBQ,MAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,YAAYP,OAASA,KACtEQ,EAASL,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,YAAYE,KAAKC,SAASX,MAAM,IAAMI,EAAM,GAEpF,OACE,kBAAC,IAAD,KACE,kBAACxB,EAAD,KACE,kBAAC,IAAD,CAAQgC,MAAK,8BACb,kBAAC,IAAD,CAAUT,KAAK,4BACf,kBAACpB,EAAD,KACE,kBAAC,IAAD,CAAM8B,GAAG,KAAT,sBACA,kCACA,oDACA,4BACE,uBAAGV,KAAK,6BAAR,uBAEF,4BACE,uBAAGA,KAAK,uBAAR,oBAEF,kBAAClB,EAAD,CAAU6B,QAAS,kBAAM,EAAKC,SAAS,CAAEzB,WAAW,MAClD,4BACE,uBAAG0B,UAAU,qBADf,QAKF,kBAAC/B,EAAD,CACE6B,QAAS,kBAEPG,MAAM,uGAGR,4BACE,uBAAGD,UAAU,sBADf,QAKc,OAAfjB,GACC,kBAACd,EAAD,CACE6B,QAAS,WACP,IAIII,EAAM,2CAJGC,OAAO,cAIb,eAHMA,OAAO,cAGb,iBAFQA,OAAO,gBAGtB,EAAKJ,SAAS,CAAExB,IAAK2B,MAGvB,4BACE,uBAAGF,UAAU,2BADf,UAMHzB,GACC,kBAACN,EAAD,KACE,wBAAI6B,QAAS,kBAAMM,UAAUC,UAAUC,UAAU/B,GAAMgC,MAAK,kBAAMN,MAAM,gBAAc1B,IAGzFD,GACC,kBAACH,EAAD,KACE,6BACE,uBACE2B,QAAS,WACP,EAAKC,SAAS,CAAEzB,WAAW,IAAS,kBAAMY,OAAOsB,aAGnD,0BAAMR,UAAU,oBAChB,6CAEF,oDACA,yBAAKS,IAAI,+BAA+BC,IAAI,QAKpD,kBAAC1C,EAAD,CAAS2C,wBAAyB,CAAEC,OAAQnB,EAAOF,KAAKsB,W,GA3F1BC,IAAMC,eAkGjCC,EAAY,c,qBCpMzB,IAAIC,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEC,KAAM,EAAQ,UAE5C,EAAQ,OAAR,CAAiC,S,gOCI1B,SAASC,EAAYC,GAC1B,OAAO,MAAQA,GAAO,iBAAoBA,EAUrC,SAASC,EAASC,GACvB,MAAyB,iBAAXA,EA2CT,SAASC,EAAiBD,GAC/B,OAAIE,MAAMD,QACDC,MAAMD,QAAQD,GAG2B,mBAA3CG,OAAOC,UAAUC,SAASC,KAAKN,GASjC,SAASO,EAAkBC,GAChC,OAAOA,QAUF,SAASC,EAAQX,GAGtB,GAAW,MAAPA,EAAa,OAAO,EAIxB,GAAIA,EAAI/D,OAAS,EAAM,OAAO,EAC9B,GAAmB,IAAf+D,EAAI/D,OAAe,OAAO,EAK9B,GAAmB,iBAAR+D,EAAkB,OAAO,EAKpC,IAAK,IAAIY,KAAOZ,EACZ,GAAIK,OAAOQ,eAAeL,KAAKR,EAAKY,GAAM,OAAO,EAGrD,OAAO,I,qEC/GT,4K,kCCMmBE,KAAKC,I,uVCqBjB,SAAStD,EAAWuD,GACzB,IAAIC,EAAQ,GAGZ,GAFgC,MAAnBD,EAAY,GAAaA,EAAYE,OAAO,GAAKF,GAAaG,MAAM,KAEjF,wDAAwB,6FACEA,MAAM,KAAzBP,EADiB,KACZ9E,EADY,KAEtB,GAAK8E,EAAL,CACA,IAAIvF,EAAO+F,mBAAmBR,GAC1BS,EAAoB,KAAVvF,OAAeN,EAAY4F,mBAAmBtF,GAC5D,GAAImF,EAAM5F,GAAO,CACf,IAAIiG,EAAML,EAAM5F,GACZ8E,YAAQmB,GACVA,EAAIC,KAAKF,GAETJ,EAAM5F,GAAQ,CAACiG,EAAKD,QAGtBJ,EAAMG,mBAAmBR,IAAQS,GAGrC,OAAOJ","file":"component---src-pages-resume-tsx-e672b1e32dded1d844e1.js","sourcesContent":["import { isArray, isPremitive, isUndefinedOrNull, isEmpty } from './is'\nimport { Func } from './types'\nexport { shallowEqual } from './array'\n\n/**\n * Deep clone one object\n * @export\n * @param {*} source any\n * @returns any\n */\nexport function recursiveCopy(source: any) {\n\n  let target\n  if (isPremitive(source)) return source\n\n  if (source instanceof Date) {\n      target = new Date()\n      target.setTime(source.getTime())\n      return target\n  }\n\n  if (source instanceof Array) {\n      target = []\n      for ( let i = 0, len = source.length; i < len; i++ ) {\n          target[i]  = recursiveCopy(source[i])\n        }\n      return target\n  }\n\n  if (source instanceof Object) {\n      target = {}\n      for (let attr in source) {\n          if (source.hasOwnProperty(attr)) {\n            target[attr] = recursiveCopy(source[attr])\n          }\n      }\n      return target\n  }\n}\n/**\n * Check whether A equals B\n *\n * @export\n * @param {*} obj1\n * @param {*} obj2\n * @returns\n */\nexport function isEqual(obj1: any, obj2: any) {\n\n  if (obj1 === obj2) return true\n\n  if (isPremitive(obj1)) return obj1 === obj2\n\n  if (obj1 instanceof Date) return obj1.getTime() === obj2.getTime()\n\n  if (obj1 instanceof Array) {\n    if ( obj1.length !== obj2.length ) return false\n    for ( let i = 0, len = obj1.length; i < len; i++ ) {\n        if (!isEqual(obj1[i], obj2[i])) return false\n      }\n    return true\n    }\n\n  if (obj1 instanceof Object) {\n    for ( let attr in obj1) {\n      if (!obj2.hasOwnProperty(attr)) return false\n      if (!isEqual(obj1[attr], obj2[attr])) return false\n    }\n    return true\n  }\n\n}\n\n/**\n * Merge Objects from left to right\n * Array and plain object properties are merged recursively.\n * Other objects and value types are overridden by assignment\n * Subsequent object overwrite property assignments of previous object.\n *\n * @export\n * @param {...any[]} argument\n * @returns\n */\nexport function merge(...argument: any[]) {\n  return argument.reduce(function(obj1: any, obj2: any) {\n    if (!isPremitive(obj1) && !isPremitive(obj2)) {\n      for (let attr in obj2) {\n        obj1[attr] = merge(obj1[attr], obj2[attr])\n      }\n      return obj1\n    }\n\n    if (isUndefinedOrNull(obj1) || isUndefinedOrNull(obj2)) {\n      return obj1 || obj2\n    }\n    obj1 = obj2\n    return obj1\n  })\n}\n\n/**\n * Like lodash.flattenDeep, except it flattens an array property of an object. e.g.:\n * {\n *   id: 1,\n *   children: [\n *     {\n *       id: 2,\n *       children: [\n *         {\n *           id: 3\n *         }\n *       ]\n *     }\n *   ]\n * }\n * become:\n * [\n *   { id: 1, children: [...] },\n *   { id: 2, children: [...] },\n *   { id: 3 },\n * ]\n *\n * @export\n * @template T\n * @param {(T | T[])} obj target to be flattened\n * @param {(string | Func)} propNameOrGetter name or getter of the target array\n * @returns {T[]}\n */\nexport function flattenDeepBy<T>(obj: T | T[], propNameOrGetter: string | Func ): T[] {\n\n  if (isEmpty(obj) || typeof obj === 'number' || typeof obj === 'string') {\n    return []\n  }\n\n  if (!isArray(obj)) {\n    obj = [obj]\n  }\n  if (typeof propNameOrGetter === 'string') {\n    let _propStr = propNameOrGetter\n    propNameOrGetter = o => o[_propStr]\n  }\n  let result = new Array\n  while (obj.length > 0) {\n    let head = obj.shift()\n    result.push(head)\n    let propVal = propNameOrGetter(head)\n    if (isArray(propVal)) {\n      obj = propVal.concat(obj)\n    }\n  }\n  return result\n}\n\n/**\n * A simple version of lodash.defaults.\n * e.g.:\n * defaults({}, 'couldBeUndefined', { a: 1 }).countBeUndefined\n * // { a: 1 }\n * To avoid writing code like:\n * let val = obj.someProp\n * if (val === undefined) {\n *   val = obj.someProp = defaultValue\n * }\n *\n * @export\n * @template T\n * @param {T} original\n * @param {string | number} prop\n * @param {*} defaultVal\n * @returns {T} mutated original object\n */\nexport function defaults<T1 extends object, T2>(\n  original: T1,\n  prop: string | number,\n  defaultVal: T2,\n): T1 & { [prop: string]: T2 } {\n\n  if (typeof original !== 'object') {\n    throw Error(`Original input must be an object, not ${typeof original}`)\n  }\n  let val = original[prop]\n  if (val === undefined) {\n    original[prop] = defaultVal\n  }\n  return original as any\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { Layout, GHRibbon } from '../components'\nimport PathContext from '../models/PathContext'\nimport Post from '../models/Post'\nimport { parseQuery } from '@drewxiu/utils'\nimport Helmet from 'react-helmet'\nimport { Link } from '../components/Link'\nimport '../utils/prismjs-theme.css'\n\nconst Wrapper = styled.div`\n  max-width: 1052px;\n  margin: auto;\n`\n\nconst Corner = styled.div`\n  padding: 12px 0 0 2em;\n  > h1 {\n    font-size: 18px;\n    margin-bottom: 6px;\n    &:first-of-type {\n      font-size: 24px;\n    }\n  }\n  > a {\n    font-size: 15px;\n    display: inline-block;\n    margin-bottom: 0.5em;\n    cursor: pointer;\n  }\n`\n\nconst Content = styled.div`\n  margin: auto;\n  max-width: 1024px;\n  min-width: 400px;\n  padding: 60px 1em;\n`\n\nconst Download = styled.a`\n  padding: 0.5em 1.5em;\n  color: white;\n  background: #98c0e4;\n  border: none;\n  border-radius: 861112px;\n  margin-top: 0.5em;\n  margin-right: 0.5em;\n  h1 {\n    font-size: 18px;\n    margin-bottom: 0;\n  }\n`\n\nconst Modal = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 999999;\n  background: rgba(0, 0, 0, 0.6);\n\n  > div {\n    position: absolute;\n    width: 100%;\n    max-width: 600px;\n    margin: auto;\n    top: 20%;\n    left: 0;\n    right: 0;\n    padding: 2rem;\n    text-align: center;\n    border-radius: 0.5rem;\n    background: #494f5c;\n\n    > a {\n      padding: 0.5em 1.5em;\n      border-radius: 861112px;\n      border: none;\n      font-size: 1.5rem;\n      background: #98c0e4;\n      margin-bottom: 1em;\n      color: white;\n      display: inline-block;\n      margin-bottom: 1em;\n    }\n  }\n`\n\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<{ node: Post }>,\n    },\n  }\n  pathContext: PathContext\n}\n\nexport default class ResumePage extends React.PureComponent<Props> {\n  state = {\n    showModal: false,\n    url: undefined,\n  }\n\n  render() {\n    let { showModal, url } = this.state\n    const {\n      location: { search },\n      data: { allMarkdownRemark },\n    } = this.props\n    let { utm_source, tag, lang = 'en' } = parseQuery(search)\n    if (!utm_source) {\n      typeof window !== 'undefined' && (window.location.href = '/')\n      return null\n    }\n    let edges = allMarkdownRemark.edges.filter(e => e.node.frontmatter.lang === lang)\n    const resume = edges.filter(e => e.node.frontmatter.tags.includes(tag))[0] || edges[0]\n\n    return (\n      <Layout>\n        <Wrapper>\n          <Helmet title={`CV | Drew.Xiu | Developer`} />\n          <GHRibbon href=\"https://github.com/noru\" />\n          <Corner>\n            <Link to=\"/\">👈 Back to my blog</Link>\n            <h1>修筑</h1>\n            <h1>Frontend / Fullstack</h1>\n            <h1>\n              <a href=\"mailto:drew.xiu@gmail.com\">drew.xiu@gmail.com</a>\n            </h1>\n            <h1>\n              <a href=\"tel:+86-15601654544\">+86-15601654544</a>\n            </h1>\n            <Download onClick={() => this.setState({ showModal: true })}>\n              <h1>\n                <i className=\"fa fa-file-pdf-o\" />\n                PDF\n              </h1>\n            </Download>\n            <Download\n              onClick={() =>\n                // tslint:disable-next-line:max-line-length\n                alert('Please drop me a message with an introduction and a template.\\n' + 'I\\'ll send it to you with pleasure.')\n              }\n            >\n              <h1>\n                <i className=\"fa fa-file-word-o\" />\n                DOC\n              </h1>\n            </Download>\n            {utm_source === 'me' && (\n              <Download\n                onClick={() => {\n                  let source = prompt('umt_source')\n                  let medium = prompt('umt_medium')\n                  let campaign = prompt('umt_campaign')\n                  // tslint:disable-next-line:max-line-length\n                  let gen = `https://blog.xiuz.hu/resume/?utm_source=${source}&utm_medium=${medium}&utm_campaign=${campaign}`\n                  this.setState({ url: gen })\n                }}\n              >\n                <h1>\n                  <i className=\"fa fa-share-alt-square\" />\n                  Share\n                </h1>\n              </Download>\n            )}\n            {url && (\n              <Download>\n                <h1 onClick={() => navigator.clipboard.writeText(url!).then(() => alert('Copied.'))}>{url}</h1>\n              </Download>\n            )}\n            {showModal && (\n              <Modal>\n                <div>\n                  <a\n                    onClick={() => {\n                      this.setState({ showModal: false }, () => window.print())\n                    }}\n                  >\n                    <span className=\"fa fa-hand-o-up\" />\n                    <span>Click Here</span>\n                  </a>\n                  <h3>and one more step...</h3>\n                  <img src=\"/assets/resume/print-cfg.png\" alt=\"\" />\n                </div>\n              </Modal>\n            )}\n          </Corner>\n          <Content dangerouslySetInnerHTML={{ __html: resume.node.html }} />\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\n\nexport const postQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 10000\n      filter: { frontmatter: { category: { eq: \"resume\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          html\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            category\n            tags\n            banner\n            lang\n          }\n          timeToRead\n        }\n      }\n      totalCount\n    }\n  }\n`\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import { Func } from './types'\n\n/**\n * Check argument is premitive or not\n *\n * @export\n * @param {*} obj\n * @returns {boolean}\n */\nexport function isPremitive(obj: any): boolean {\n  return null == obj || 'object' !== typeof obj\n}\n\n/**\n * To test if the input is a number\n *\n * @export\n * @param {*} testee\n * @returns {testee is number}\n */\nexport function isNumber(testee: unknown): testee is number {\n  return typeof testee === 'number'\n}\n\n/**\n * To test if the input is a string\n *\n * @export\n * @param {*} testee\n * @returns {testee is number}\n */\nexport function isString(testee: unknown): testee is string {\n  return typeof testee === 'string'\n}\n\n/**\n * To test if the input is a boolean\n *\n * @export\n * @param {*} testee\n * @returns {testee is number}\n */\nexport function isBoolean(testee: unknown): testee is boolean {\n  return typeof testee === 'boolean'\n}\n\n/**\n * To test if the input is a function\n *\n * @export\n * @param {*} testee\n * @returns {testee is number}\n */\nexport function isFunction(testee: unknown): testee is Func {\n  return typeof testee === 'function'\n}\n\n/**\n * To test if an argument is an Array\n *\n * @export\n * @param {*} testee\n * @returns {boolean}\n */\nexport function isArray<T = any>(testee: unknown): testee is T[] {\n  if (Array.isArray) {\n    return Array.isArray(testee)\n  }\n\n  return Object.prototype.toString.call(testee) === '[object Array]'\n}\n\n/**\n * Check input param is undefined or null\n *\n * @param {*} param\n * @returns {boolean}\n */\nexport function isUndefinedOrNull(param: unknown): boolean {\n  return param === null || param === undefined\n}\n\n/**\n *  Check input param is \"Empty\": undefined or null or {}, []\n *\n * @export\n * @param {any} obj\n * @returns {boolean}\n */\nexport function isEmpty(obj: any): boolean {\n\n  // null and undefined are \"empty\"\n  if (obj == null) return true\n\n  // Assume if it has a length property with a non-zero value\n  // that that property is correct.\n  if (obj.length > 0)    return false\n  if (obj.length === 0)  return true\n\n  // If it isn't an object at this point\n  // it is empty, but it can't be anything *but* empty\n  // Is it empty?  Depends on your application.\n  if (typeof obj !== 'object') return false\n\n  // Otherwise, does it have any properties of its own?\n  // Note that this doesn't handle\n  // toString and valueOf enumeration bugs in IE < 9\n  for (let key in obj) {\n      if (Object.hasOwnProperty.call(obj, key)) return false\n  }\n\n  return true\n}\n","export * from './array'\nexport * from './env'\nexport * from './func'\nexport * from './number'\nexport * from './object'\nexport * from './random'\nexport * from './string'\nexport * from './dom'\nexport * from './assertions'\nexport * from './is'\nexport * from './types'\nexport * from './math'","/**\n * Math.PI * 2, a whole radiant circle\n *\n * @export\n * @constant\n */\nexport const TAU = Math.PI * 2\n/**\n * Golden ratio\n *\n * @export\n * @constant\n */\nexport const PHI = 1.618033988749895\n\nexport interface Vector2D {\n  x: number\n  y: number\n}\n\n/**\n * Rotate a 2D vector by given angle, returns a new vector\n *\n * @export\n * @param {Vector2D} vector2D\n * @param {number} angle\n * @returns {Vector2D}\n */\nexport function rotate2D(v: Vector2D, angle: number): Vector2D {\n  let { x, y } = v\n  return {\n    x: x * Math.cos(angle) - y * Math.sin(angle),\n    y: x * Math.sin(angle) + y * Math.cos(angle),\n  }\n}\n","import { isArray } from './is'\n\n/**\n * Make a long string shorter and end with \"…\"\n *\n * e.g.: ellipsis('helloworld!', 5) // \"hello…\"\n *\n * @export\n * @param {string} str\n * @param {number} limit chars to keep\n * @returns {string}\n */\nexport function ellipsis(str: string, limit: number): string {\n  if (typeof str !== 'string') {\n    throw new Error(`${JSON.stringify(str)} is not a string`)\n  }\n\n  return str.length > limit ? str.substring(0, limit) + '…' : str\n}\n\n/**\n * Parse query string and return a key/value object\n *\n * @export\n * @param {any} queryString\n * @returns {any}\n */\nexport function parseQuery(queryString): any {\n  let query = {}\n  let pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&')\n  // tslint:disable-next-line:prefer-for-of\n  for (let pair of pairs) {\n    let [key, value] = pair.split('=')\n    if (!key) continue\n    let prop = decodeURIComponent(key)\n    let propVal = value === '' ? undefined : decodeURIComponent(value)\n    if (query[prop]) {\n      let val = query[prop]\n      if (isArray(val)) {\n        val.push(propVal)\n      } else {\n        query[prop] = [val, propVal]\n      }\n    } else {\n      query[decodeURIComponent(key)] = propVal\n    }\n  }\n  return query\n}\n\n/**\n * Like String.prototype.replace, except it replaces all occurrences\n *\n * @export\n * @param {string} target\n * @param {string} search\n * @param {string} replacement\n * @returns {string}\n */\nexport function replaceAll(target: string, search: string, replacement: string): string {\n  return target.replace(new RegExp(search, 'g'), replacement)\n}\n\n/**\n * calculate hash (32bit integer) from a string\n * @param str\n */\nexport function hashOf(str: string | null = ''): number {\n  let hash = 0,\n    i,\n    chr\n  if (str === null) {\n    return hash\n  }\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0 // Convert to 32bit integer\n  }\n  return hash\n}\n\n/**\n * Padding a string or number with assigned content\n *\n * @export\n * @param {(string | number)} origin target string\n * @param {string} paddingContent, can be more than 1 char, however this function does not trim\n * @param {number} threshold target length with padding\n * @param {boolean} [left=true] padding left or right\n * @returns {string}\n */\nexport function padding(origin: string | number, paddingContent: string, threshold: number, left = true): string {\n  origin = String(origin)\n  if (origin.length >= threshold) {\n    return origin\n  }\n\n  let paddingStr = Array(threshold - origin.length)\n    .fill(paddingContent)\n    .join('')\n  return left ? paddingStr + origin : origin + paddingStr\n}\n\n/**\n * Capitalize first char of a string\n *\n * @export\n * @param {string} origin\n * @returns {string} firstLetterCapitalized\n */\nexport function capitalizeFirst(origin: string): string {\n  return origin.charAt(0).toUpperCase() + origin.slice(1)\n}\n"],"sourceRoot":""}