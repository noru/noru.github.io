{"version":3,"sources":["webpack:///./src/templates/Blog.tsx"],"names":["BlogPage","render","this","props","pageContext","currentPage","totalPages","data","allMarkdownRemark","edges","totalCount","title","config","siteTitle","to","uppercase","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","url","React","Component","BlogQuery"],"mappings":"2QAgBqBA,E,gLAEnBC,OAAA,WAAS,MAC6BC,KAAKC,MAAMC,YAAvCC,EADD,EACCA,YAAaC,EADd,EACcA,WADd,EAEUJ,KAAKC,MAAdI,KAC2BC,kBAA3BC,EAHD,EAGCA,MAAOC,EAHR,EAGQA,WAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,UAAYC,IAAOC,YAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKF,IAAOC,WACrB,kBAAC,IAAD,CAAcE,WAAW,GAAzB,mBAAgDL,EAAhD,MAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGD,EAAMO,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CACEN,MAAOM,EAAKC,KAAKC,YAAYR,MAC7BS,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BC,QAASJ,EAAKC,KAAKG,QACnBC,WAAYL,EAAKC,KAAKI,WACtBC,KAAMN,EAAKC,KAAKM,OAAOD,KACvBE,SAAUR,EAAKC,KAAKC,YAAYM,SAChCC,IAAKT,EAAKC,KAAKM,OAAOD,UAG1B,kBAAC,IAAD,CAAYlB,YAAaA,EAAaC,WAAYA,EAAYqB,IAAK,a,GA3BzCC,IAAMC,WAkC/BC,EAAY","file":"component---src-templates-blog-tsx-4e6bf22618f90ff29e50.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout, Article, Wrapper, SectionTitle, Header, Content, Pagination } from '../components'\nimport Helmet from 'react-helmet'\nimport config from '../../config/SiteConfig'\nimport Data from '../models/Data'\nimport { Link } from '../components/Link'\n\ninterface Props {\n  data: Data\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n  }\n}\n\nexport default class BlogPage extends React.Component<Props> {\n\n  render() {\n    const { currentPage, totalPages } = this.props.pageContext\n    const { data } = this.props\n    const { edges, totalCount } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <Helmet title={`Blog | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n          <SectionTitle uppercase={true}>Latest stories ({totalCount})</SectionTitle>\n        </Header>\n        <Wrapper>\n          <Content>\n            {edges.map(post => (\n              <Article\n                title={post.node.frontmatter.title}\n                date={post.node.frontmatter.date}\n                excerpt={post.node.excerpt}\n                timeToRead={post.node.timeToRead}\n                slug={post.node.fields.slug}\n                category={post.node.frontmatter.category}\n                key={post.node.fields.slug}\n              />\n            ))}\n            <Pagination currentPage={currentPage} totalPages={totalPages} url={'blog'} />\n          </Content>\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date],\n      order: DESC },\n      limit: $limit,\n      skip: $skip,\n      filter: {\n        frontmatter: {category: {ne: \"resume\"}}\n        fields: { draft: { eq: false } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}