{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/堆积-1-意呆利-mig-29-1-72","webpackCompilationHash":"830f500b8b3a882a17b6","result":{"data":{"markdownRemark":{"html":"<p>制作第一架苏俄战机，（不算轰五和歼七）。Mig-29 与苏-27 系列共享气动外形，即使与兄弟相比略逊，但依然是颜值立命的一款战机。</p>\n<p><img src=\"/assets/image/mig29/box.jpg\" alt=\"box\"></p>\n<p>这款意呆利的板件，继续让人糟心的体验。组合度有点夸张了，即使板件缩水了，好歹你的宣传图要给点力吧？结果人家封面上座舱盖的巨大缝隙毫不掩饰的就给你看。不知道田宫为啥跟这家合作。只好多花点时间打磨。过程也是有些不顺利，难道休息许久手生，各种事故。空速管，起落架手贱提前装上结果折断。喷嘴手贱提前装上结果花大力气遮盖，星影 J-73 静置一段时间竟然颜色分层，导致前后两次上色不一致，等等。</p>\n<p>到了上色时候，正准备按部就班，结果发现这迷彩不是我之前随便瞎喷的 F-16 的样式么？！</p>\n<p><img src=\"/assets/image/mig29/f16.jpg\" alt=\"f16\">\n一不小心喷成了假想敌中队 ↑</p>\n<p><img src=\"/assets/image/mig29/scheme.jpg\" alt=\"scheme\">\n于是想换一个涂装。Mig29 比较新的数码迷彩和割裂迷彩都挺酷炫，数码迷彩没有配套水贴于是作罢。选择了稍微简单一点的俄军割裂三色迷彩，正好手上颜色也可以用。第一次考据正经喷迷彩，过程还是挺艰辛的。按照色块由浅到深喷涂遮盖略嫌麻烦，还容易出错。即使这样，漆面也很厚导致预制阴影毫无效果。下次的话直接全身喷底色再覆盖了。不过之后的效果还是挺令人满意， Sexy~</p>\n<p><img src=\"/assets/image/mig29/1.jpg\" alt=\"1\"></p>\n<p><img src=\"/assets/image/mig29/2.jpg\" alt=\"2\"></p>\n<p><img src=\"/assets/image/mig29/3.jpg\" alt=\"3\"></p>\n<p><img src=\"/assets/image/mig29/4.jpg\" alt=\"4\"></p>\n<p><img src=\"/assets/image/mig29/5.jpg\" alt=\"5\"></p>\n<p><img src=\"/assets/image/mig29/6.jpg\" alt=\"6\"></p>\n<p><img src=\"/assets/image/mig29/7.jpg\" alt=\"7\"></p>\n<p><img src=\"/assets/image/mig29/8.jpg\" alt=\"8\"></p>\n<p>下一个： 舔地狂魔 A-10！</p>","fields":{"slug":"堆积-1-意呆利-mig-29-1-72"},"frontmatter":{"title":"[堆积-1]意呆利Mig-29 1:72","date":"02.05.2019","category":"ScaleModel","tags":["飞机","现代","苏","1:72"],"banner":"/assets/image/mig29/5.jpg"},"timeToRead":1}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"堆积-1-意呆利-mig-29-1-72","prev":{"excerpt":"这是一道我经常在面试中会问的css题：如何实现Android平台上常见的，线条长度会变化的Loading组件： 这是一个我自己也答不出来的题, 问这个题的目的只是试探一下候选人是不是思维特别敏捷或者真的有深厚的css知识，而且也只当附加题助兴。如果真的思路正确甚至能完美答出，那真是遇见水平超出自己的人了。可惜并没有遇到，哪怕是思路靠边的也没有，看来此题并不是一个特别好的面试题。 第一次发现这个的纯css实现， 是在使用公司的 。具体Inspect的细节已经不急不清楚了，只记得是根据边框dash…","html":"<p>这是一道我经常在面试中会问的css题：如何实现Android平台上常见的，线条长度会变化的Loading组件：</p>\n<style>\n\n@keyframes spin {\n  to {transform:rotate(0deg);}\n  from {transform:rotate(360deg);}\n}\n\n.spinner {\n  animation: spin 5s linear infinite;\n}\n\n@keyframes dash {\n  0% {stroke-dashoffset: 0;}\n  100% {stroke-dashoffset: 860;}\n}\n\n.spinner circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: orange;\n  animation: dash 3s linear infinite;\n}\n\n</style>\n<svg class=\"spinner\">\n  <circle></circle>\n</div>\n<p>这是一个我自己也答不出来的题, 问这个题的目的只是试探一下候选人是不是思维特别敏捷或者真的有深厚的css知识，而且也只当附加题助兴。如果真的思路正确甚至能完美答出，那真是遇见水平超出自己的人了。可惜并没有遇到，哪怕是思路靠边的也没有，看来此题并不是一个特别好的面试题。</p>\n<p>第一次发现这个的纯css实现， 是在使用公司的<code class=\"language-text\">JFrog artifactory</code>。具体Inspect的细节已经不急不清楚了，只记得是根据边框dash line的线段长短和offset来实现。当时真是觉得惊为天人，是那自我感觉良好，但突然发现一个事实让你感觉自己还是一个菜B的经历。</p>\n<p>过了这么久，问了这么多遍，竟然自己还没有实现过确实说不过去。既然上一篇blog解决了在markdown中写demo的问题，就趁热动动手。</p>\n<h3 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h3>\n<p>刚见到实现的时候，一个最大的收获就是一个看似复杂的动作，其实只是两个简单的子动作的组合而已。再次提醒，拆分解决问题的重要性。如上，这个动画效果是两个子动画的叠加：</p>\n<ul>\n<li>整个圆形的旋转，匀速，反复。</li>\n<li>把圆的周长拉直，想象成一条轨道，一条实线在轨道上划过，反复。</li>\n</ul>\n<p>这样分解之后，问题就简单了很多。</p>\n<p>匀速旋转的css实现很简单：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> spin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>360deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.spinner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> spin 5s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>第二个看起来也不难，但涉及到具体实现方式就有问题了。本以为<code class=\"language-text\">border</code>的<code class=\"language-text\">dashed</code>会有类似的属性来控制offset，结果并没有，需要借助<code class=\"language-text\">svg</code>的<code class=\"language-text\">stroke-dashoffset</code>才可以：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> dash</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span><span class=\"token property\">stroke-dashoffset</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span><span class=\"token property\">stroke-dashoffset</span><span class=\"token punctuation\">:</span> 860<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.spinner circle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">cx</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">cy</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">r</span><span class=\"token punctuation\">:</span> 67px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 430 430<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> dash 3s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>spinner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>67px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>circle</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>这里注意offset和dasharray的数值，都跟spinner的半径有关: <code class=\"language-text\">dasharray</code>的实线和空白长度为周长， <code class=\"language-text\">dashoffset</code>的变化是两倍的周长。 于是就有了开头的效果。</p>\n<p>最初在尝试写这个效果的时候，我在<code class=\"language-text\">keyframe</code>中使用的是<code class=\"language-text\">stroke-dasharray</code>而非<code class=\"language-text\">stroke-dashoffset</code>。结果得到了如下的结果：</p>\n<style>\n\n@keyframes dash2 {\n  0% {stroke-dasharray: 430, 0;}\n  50% {stroke-dasharray: 0, 430;}\n  100% {stroke-dasharray: 430, 0;}\n}\n\n.spinner circle.demo2 {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430, 430;\n  fill: none;\n  stroke: orange;\n  animation: dash2 3s linear infinite;\n}\n\n</style>\n<svg class=\"spinner\">\n  <circle class=\"demo2\"></circle>\n</div>\n<p>很明显线段在伸长时的方向不对。但如果调整一下旋转方向，或加快速度，又是另一番风味：</p>\n<style>\n.spinner-1,.spinner-2 {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes dash3 {\n  0% {stroke-dasharray: 430, 0;}\n  66% {stroke-dasharray: 0, 430;}\n  100% {stroke-dasharray: 430, 0;}\n}\n\n@keyframes dash4 {\n  0% {stroke-dasharray: 0, 430;}\n  33% {stroke-dasharray: 430, 0;}\n  100% {stroke-dasharray: 0, 430;}\n}\n\n\n.spinner-1 circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: orange;\n  animation: dash3 1s linear infinite;\n}\n.spinner-2 circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: pink;\n  animation: dash4 1s linear infinite;\n}\n\n</style>\n<svg class=\"spinner-1\">\n  <circle></circle>\n</svg>\n<svg class=\"spinner-2\">\n  <circle></circle>\n</svg>\n<p>在这个框架下面，通过调整各种参数还是能得到很多意想不到的效果。网上还搜到<a href=\"https://codepen.io/ingomc/pen/ONrMqe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">一个spinner的css实现合集</a>，其中还包括不用svg实现的相同效果和利用<code class=\"language-text\">box-shadow</code>实现圆点组成的spinner，也很是更新认知。</p>","id":"934fd1e8-9080-508c-a447-b15ca8b7b157","fields":{"slug":"小事儿-android风格-loading-indicator-spinner"},"frontmatter":{"date":"2019-04-17","title":"小事儿: Android风格Loading Indicator(Spinner)","category":"Code","tags":["css","animation","小事儿"],"banner":"/assets/image/spinner.png"},"timeToRead":1},"next":{"excerpt":"制作过程中一度认为这是个失败的作品, 因为涂装跑偏太严重了. 期初因为身边没有 A-10 的丛林迷彩颜料, 于是想搞个沙漠迷彩. 手头的几个黄色看起来没什么问题, 但是实际效果真是有出入. A-10 的沙漠涂装(peanut schema)好像不怎么正式, 连张真机高清无码大图都找不到. 美军标志的幽灵灰讲真是坠吼的, 可是这个颜色已经有点疲劳了, 想试一下别的. 结果出来么, 看起来没有那么惨, 但比上一个 Mig-29 还是差点意思. 板件, 意呆利代工的田宫 A-1…","html":"<p>制作过程中一度认为这是个失败的作品, 因为涂装跑偏太严重了. 期初因为身边没有 A-10 的丛林迷彩颜料, 于是想搞个沙漠迷彩. 手头的几个黄色看起来没什么问题, 但是实际效果真是有出入. A-10 的沙漠涂装(peanut schema)好像不怎么正式, 连张真机高清无码大图都找不到. 美军标志的幽灵灰讲真是坠吼的, 可是这个颜色已经有点疲劳了, 想试一下别的. 结果出来么, 看起来没有那么惨, 但比上一个 Mig-29 还是差点意思.</p>\n<p><img src=\"/assets/image/a10/7.jpg\" alt=\"7\"></p>\n<p>板件, 意呆利代工的田宫 A-10. 这次的板件感觉还可以, 不愧是传说中的决定版, 但也就是那么回事. 由于买了高大上的<code class=\"language-text\">David 400</code>往复式打磨工具, 有些瑕疵也就搞掉了. 顺便吹爆这个工具, 提高效果和生产力的决定工具之一. 虽然人机设计一般, 配件也有很大的提升空间, 但总归是没什么竞争的产品线, 值得回 750 大洋.</p>\n<p><img src=\"/assets/image/a10/box.jpg\" alt=\"box\"></p>\n<p>上图 (with fun facts) :</p>\n<ol>\n<li>\n<p>唯一一个为一门机炮设计的飞机\n<img src=\"/assets/image/a10/1.jpg\" alt=\"1\"></p>\n</li>\n<li>\n<p>机炮的烟雾会让发动机熄火, 解决方案是开火同时也不断触发发动机点火.\n<img src=\"/assets/image/a10/2.jpg\" alt=\"2\"></p>\n</li>\n<li>\n<p>前起落架偏移中轴线, 以便给机炮让位置. 后起落架半露出设计, 方便迫降.\n<img src=\"/assets/image/a10/3.jpg\" alt=\"3\"></p>\n</li>\n<li>\n<p>发动机离地很高避免吸入地面杂物, 上翘 9° 避免飞机低头.\n<img src=\"/assets/image/a10/4.jpg\" alt=\"4\"></p>\n</li>\n<li>\n<p>可以用一个发动机, 一个尾翼, 和半拉机翼正常飞行.\n<img src=\"/assets/image/a10/5.jpg\" alt=\"5\"></p>\n</li>\n<li>\n<p>A-10 正式名字 thunderbolt II, 来自 P-47. Warthog 只是飞行员们起的昵称.\n<img src=\"/assets/image/a10/6.jpg\" alt=\"6\"></p>\n</li>\n</ol>\n<p>下一个： 宇宙第一战机 F-22！</p>","id":"78e9c412-e616-5977-9f8a-490bda730b7b","fields":{"slug":"堆积-1-意呆利-田宫a-10-1-72"},"frontmatter":{"date":"2019-05-13","title":"[堆积-1]意呆利/田宫A-10 1:72","category":"ScaleModel","tags":["飞机","现代","美","1:72"],"banner":"/assets/image/a10/6.jpg"},"timeToRead":1}}}}