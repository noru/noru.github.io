{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/2019-04-17","webpackCompilationHash":"1b1bedf5876f042f7c4c","result":{"data":{"markdownRemark":{"html":"<p>这是一道我经常在面试中会问的css题：如何实现Android平台上常见的，线条长度会变化的Loading组件：</p>\n<style>\n\n@keyframes spin {\n  to {transform:rotate(0deg);}\n  from {transform:rotate(360deg);}\n}\n\n.spinner {\n  animation: spin 5s linear infinite;\n}\n\n@keyframes dash {\n  0% {stroke-dashoffset: 0;}\n  100% {stroke-dashoffset: 860;}\n}\n\n.spinner circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: orange;\n  animation: dash 3s linear infinite;\n}\n\n</style>\n<svg class=\"spinner\">\n  <circle></circle>\n</div>\n<p>这是一个我自己也答不出来的题, 问这个题的目的只是试探一下候选人是不是思维特别敏捷或者真的有深厚的css知识，而且也只当附加题助兴。如果真的思路正确甚至能完美答出，那真是遇见水平超出自己的人了。可惜并没有遇到，哪怕是思路靠边的也没有，看来此题并不是一个特别好的面试题。</p>\n<p>第一次发现这个的纯css实现， 是在使用公司的<code class=\"language-text\">JFrog artifactory</code>。具体Inspect的细节已经不急不清楚了，只记得是根据边框dash line的线段长短和offset来实现。当时真是觉得惊为天人，是那自我感觉良好，但突然发现一个事实让你感觉自己还是一个菜B的经历。</p>\n<p>过了这么久，问了这么多遍，竟然自己还没有实现过确实说不过去。既然上一篇blog解决了在markdown中写demo的问题，就趁热动动手。</p>\n<h3 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h3>\n<p>刚见到实现的时候，一个最大的收获就是一个看似复杂的动作，其实只是两个简单的子动作的组合而已。再次提醒，拆分解决问题的重要性。如上，这个动画效果是两个子动画的叠加：</p>\n<ul>\n<li>整个圆形的旋转，匀速，反复。</li>\n<li>把圆的周长拉直，想象成一条轨道，一条实线在轨道上划过，反复。</li>\n</ul>\n<p>这样分解之后，问题就简单了很多。</p>\n<p>匀速旋转的css实现很简单：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> spin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>360deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.spinner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> spin 5s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>第二个看起来也不难，但涉及到具体实现方式就有问题了。本以为<code class=\"language-text\">border</code>的<code class=\"language-text\">dashed</code>会有类似的属性来控制offset，结果并没有，需要借助<code class=\"language-text\">svg</code>的<code class=\"language-text\">stroke-dashoffset</code>才可以：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> dash</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span><span class=\"token property\">stroke-dashoffset</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span><span class=\"token property\">stroke-dashoffset</span><span class=\"token punctuation\">:</span> 860<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.spinner circle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">cx</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">cy</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">r</span><span class=\"token punctuation\">:</span> 67px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 430 430<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> dash 3s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>spinner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>67px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>circle</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>这里注意offset和dasharray的数值，都跟spinner的半径有关: <code class=\"language-text\">dasharray</code>的实线和空白长度为周长， <code class=\"language-text\">dashoffset</code>的变化是两倍的周长。 于是就有了开头的效果。</p>\n<p>最初在尝试写这个效果的时候，我在<code class=\"language-text\">keyframe</code>中使用的是<code class=\"language-text\">stroke-dasharray</code>而非<code class=\"language-text\">stroke-dashoffset</code>。结果得到了如下的结果：</p>\n<style>\n\n@keyframes dash2 {\n  0% {stroke-dasharray: 430, 0;}\n  50% {stroke-dasharray: 0, 430;}\n  100% {stroke-dasharray: 430, 0;}\n}\n\n.spinner circle.demo2 {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430, 430;\n  fill: none;\n  stroke: orange;\n  animation: dash2 3s linear infinite;\n}\n\n</style>\n<svg class=\"spinner\">\n  <circle class=\"demo2\"></circle>\n</div>\n<p>很明显线段在伸长时的方向不对。但如果调整一下旋转方向，或加快速度，又是另一番风味：</p>\n<style>\n.spinner-1,.spinner-2 {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes dash3 {\n  0% {stroke-dasharray: 430, 0;}\n  66% {stroke-dasharray: 0, 430;}\n  100% {stroke-dasharray: 430, 0;}\n}\n\n@keyframes dash4 {\n  0% {stroke-dasharray: 0, 430;}\n  33% {stroke-dasharray: 430, 0;}\n  100% {stroke-dasharray: 0, 430;}\n}\n\n\n.spinner-1 circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: orange;\n  animation: dash3 1s linear infinite;\n}\n.spinner-2 circle {\n  cx: 50%;\n  cy: 50%;\n  r: 67px;\n  stroke-width: 5;\n  stroke-dasharray: 430 430;\n  fill: none;\n  stroke: pink;\n  animation: dash4 1s linear infinite;\n}\n\n</style>\n<svg class=\"spinner-1\">\n  <circle></circle>\n</svg>\n<svg class=\"spinner-2\">\n  <circle></circle>\n</svg>\n<p>在这个框架下面，通过调整各种参数还是能得到很多意想不到的效果。网上还搜到<a href=\"https://codepen.io/ingomc/pen/ONrMqe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">一个spinner的css实现合集</a>，其中还包括不用svg实现的相同效果和利用<code class=\"language-text\">box-shadow</code>实现圆点组成的spinner，也很是更新认知。</p>","fields":{"slug":"2019-04-17"},"frontmatter":{"title":"小事儿: Android风格Loading Indicator(Spinner)","date":"17.04.2019","category":"Code","tags":["css","animation","小事儿"],"banner":"/assets/image/spinner.png"},"timeToRead":1}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"2019-04-17","prev":{"excerpt":"4 月 1 号打开了 StackOverflow, 看见满屏幕中二元素还以为自己走错了板块. 后来才想到愚人节的事情. 除了独角兽和超 gay 配色, 还有个鼠标下雪的效果还行, 就想着做做看. 思路 目标区域监听 事件, 获取鼠标位置. 图形: canvas 还是 DOM? 仔细看原实现, 雪花其实就是 * 号. 这样 DOM 会方便一些, 但 canvas 也不是不行. 动画: 动画部分由 , 和 x, y…","html":"<p>4 月 1 号打开了 StackOverflow, 看见满屏幕中二元素还以为自己走错了板块. 后来才想到愚人节的事情. 除了独角兽和超 gay 配色, 还有个鼠标下雪的效果还行, 就想着做做看.</p>\n<h3 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h3>\n<ul>\n<li>目标区域监听<code class=\"language-text\">mousemove</code>事件, 获取鼠标位置.</li>\n<li>图形: canvas 还是 DOM? 仔细看原实现, 雪花其实就是*号. 这样 DOM 会方便一些, 但 canvas 也不是不行.</li>\n<li>动画: 动画部分由<code class=\"language-text\">fade out</code>, 和 x, y 轴两个方向的移动组成, 原实现并没有太复杂的诸如抖动, 动画曲线之类效果, 也没太大必要. 这一部分 css 可以实现, 问题是要不要利用<code class=\"language-text\">transition</code>, 用的话代码上简单一点, 不用的话可以精细控制做点其他效果.</li>\n</ul>\n<h3 id=\"搞\"><a href=\"#%E6%90%9E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>搞</h3>\n<hr>\n<h4 id=\"dom\"><a href=\"#dom\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM</h4>\n<p>找一个区域, 盛放雪花元素. 再放一个雪花的模板, 克隆用.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>playground<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> lightgrey<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>snowflake-template<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>snowflake<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>一些默认的 css 属性, 主要是控制雪花 sprite.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n  <span class=\"token selector\">.snowflake</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 861112<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 2s<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#playground .snowflake</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<hr>\n<h4 id=\"js\"><a href=\"#js\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JS</h4>\n<p>准备工作</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token constant\">COLORS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> playground <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'playground'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'snowflake-template'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// todo</span>\n<span class=\"token punctuation\">}</span>\n\nplayground<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> onMouseMove<span class=\"token punctuation\">)</span></code></pre></div>\n<p>然后实现<code class=\"language-text\">onMouseMove</code>, 要做的事情就是, 1, 从模板复制一个雪花出来, 塞到容器里 2, 添加相关 css 属性. 3, 一定时间后摘除雪花元素. 考虑性能这个方法可做<code class=\"language-text\">throttle</code>, 这里略过.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onMouseMove</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> color <span class=\"token operator\">=</span> <span class=\"token constant\">COLORS</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> snowflake <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  snowflake<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  playground<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>snowflake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  snowflake<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`\n    top: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>evt<span class=\"token punctuation\">.</span>clientY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px;\n    left:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>evt<span class=\"token punctuation\">.</span>clientX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px;\n    color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  `</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    snowflake<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    snowflake<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`scale(.4) translate3d(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">280</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, 0)`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    snowflake<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>值得注意的是, <code class=\"language-text\">opacity</code>和<code class=\"language-text\">transform</code>是通过<code class=\"language-text\">setTimeout</code>另外加到元素上, 这样可以使<code class=\"language-text\">transition</code>生效. 这里也可以用<code class=\"language-text\">setInterval</code>或<code class=\"language-text\">requestAnimationFrame</code>来控制, 各个数值亦可以根据效果调整.</p>\n<h3 id=\"demo\"><a href=\"#demo\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Demo</h3>\n<div id=\"playground\">\n  hover me!\n</div>\n<style>\n\n  #playground {\n    width: 500px;\n    height: 500px;\n    background: lightgrey;\n    color: white;\n    font-size: 30px;\n    text-align: center;\n    padding-top: 200px;\n  }\n  .snowflake {\n    display: none;\n    position: fixed;\n    z-index: 861112;\n    transition: all 2s;\n    opacity: 1;\n    pointer-events: none;\n  }\n  #playground .snowflake {\n    display: block;\n  }\n</style>\n<p><span id=\"snowflake-template\" class=\"snowflake\">*</span></p>\n<script data-inline-script=\"data-inline-script\">\n\n  let COLORS = [\"#D61C59\", \"#E7D84B\", \"#1B8798\"]\n  let playground = document.getElementById('playground')\n  let template = document.getElementById('snowflake-template')\n\n  function onMouseMove(evt) {\n    let color = COLORS[(Math.random() * 3) | 0]\n    let snowflake = template.cloneNode(true)\n    snowflake.removeAttribute('id')\n    playground.appendChild(snowflake)\n    snowflake.style.cssText = `\n      top: ${evt.clientY}px;\n      left:${evt.clientX}px;\n      color: ${color};\n    `\n    setTimeout(() => {\n      snowflake.style.opacity = 0\n      snowflake.style.transform = `scale(.4) translate3d(${(.5 - Math.random()) * 200}px, ${Math.random() * 280}px, 0)`\n    })\n    setTimeout(() => {\n      snowflake.remove()\n    }, 2000)\n  }\n\n  playground.addEventListener('mousemove', onMouseMove)\n\n</script>\n<h3 id=\"跟原实现的对比\"><a href=\"#%E8%B7%9F%E5%8E%9F%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%AF%B9%E6%AF%94\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>跟原实现的对比</h3>\n<p>上面的 demo, 颜色是借用的, 其他都是按照效果实现. 原实现其实已经<a href=\"https://stackapps.com/questions/8287/2019-april-fools-day-retro-theme\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公布在了 StackOverflow 上</a>. 对比下来主要区别是, 原实现没用<code class=\"language-text\">transition</code>而是上面提到的<code class=\"language-text\">requestAnimationFrame</code>方案, 效果上确实没有 demo 中的卡顿(原因应该是是 demo 中的第一个<code class=\"language-text\">setTimeout</code>的频繁 DOM 操作).</p>","id":"976f7a3a-2f0c-5946-b5bc-1e3ee138d18c","fields":{"slug":"2019-04-03"},"frontmatter":{"date":"2019-04-03","title":"小事儿: stackoverflow愚人节特效","category":"Code","tags":["css","stackoverflow","animation","小事儿"],"banner":"/assets/image/stackoverflow-aprilfools-theme.png"},"timeToRead":2},"next":{"excerpt":"制作第一架苏俄战机，（不算轰五和歼七）。Mig-29 与苏-27 系列共享气动外形，即使与兄弟相比略逊，但依然是颜值立命的一款战机。 这款意呆利的板件，继续让人糟心的体验。组合度有点夸张了，即使板件缩水了，好歹你的宣传图要给点力吧？结果人家封面上座舱盖的巨大缝隙毫不掩饰的就给你看。不知道田宫为啥跟这家合作。只好多花点时间打磨。过程也是有些不顺利，难道休息许久手生，各种事故。空速管，起落架手贱提前装上结果折断。喷嘴手贱提前装上结果花大力气遮盖，星影 J-7…","html":"<p>制作第一架苏俄战机，（不算轰五和歼七）。Mig-29 与苏-27 系列共享气动外形，即使与兄弟相比略逊，但依然是颜值立命的一款战机。</p>\n<p><img src=\"/assets/image/mig29/box.jpg\" alt=\"box\"></p>\n<p>这款意呆利的板件，继续让人糟心的体验。组合度有点夸张了，即使板件缩水了，好歹你的宣传图要给点力吧？结果人家封面上座舱盖的巨大缝隙毫不掩饰的就给你看。不知道田宫为啥跟这家合作。只好多花点时间打磨。过程也是有些不顺利，难道休息许久手生，各种事故。空速管，起落架手贱提前装上结果折断。喷嘴手贱提前装上结果花大力气遮盖，星影 J-73 静置一段时间竟然颜色分层，导致前后两次上色不一致，等等。</p>\n<p>到了上色时候，正准备按部就班，结果发现这迷彩不是我之前随便瞎喷的 F-16 的样式么？！</p>\n<p><img src=\"/assets/image/mig29/f16.jpg\" alt=\"f16\">\n一不小心喷成了假想敌中队 ↑</p>\n<p><img src=\"/assets/image/mig29/scheme.jpg\" alt=\"scheme\">\n于是想换一个涂装。Mig29 比较新的数码迷彩和割裂迷彩都挺酷炫，数码迷彩没有配套水贴于是作罢。选择了稍微简单一点的俄军割裂三色迷彩，正好手上颜色也可以用。第一次考据正经喷迷彩，过程还是挺艰辛的。按照色块由浅到深喷涂遮盖略嫌麻烦，还容易出错。即使这样，漆面也很厚导致预制阴影毫无效果。下次的话直接全身喷底色再覆盖了。不过之后的效果还是挺令人满意， Sexy~</p>\n<p><img src=\"/assets/image/mig29/1.jpg\" alt=\"1\"></p>\n<p><img src=\"/assets/image/mig29/2.jpg\" alt=\"2\"></p>\n<p><img src=\"/assets/image/mig29/3.jpg\" alt=\"3\"></p>\n<p><img src=\"/assets/image/mig29/4.jpg\" alt=\"4\"></p>\n<p><img src=\"/assets/image/mig29/5.jpg\" alt=\"5\"></p>\n<p><img src=\"/assets/image/mig29/6.jpg\" alt=\"6\"></p>\n<p><img src=\"/assets/image/mig29/7.jpg\" alt=\"7\"></p>\n<p><img src=\"/assets/image/mig29/8.jpg\" alt=\"8\"></p>\n<p>下一个： 舔地狂魔 A-10！</p>","id":"34a7840d-10db-5560-86e2-237e2eb5d430","fields":{"slug":"2019-05-02"},"frontmatter":{"date":"2019-05-02","title":"[堆积-1]意呆利Mig-29 1:72","category":"ScaleModel","tags":["飞机","现代","苏","1:72"],"banner":"/assets/image/mig29/5.jpg"},"timeToRead":1}}}}