{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/零式舰战-22-型甲-1-72","webpackCompilationHash":"57ab0be0d24fcdb79b2f","result":{"data":{"markdownRemark":{"html":"<p><img src=\"/assets/image/reisen/1.JPG\" alt=\"1\"></p>\n<p>9月份在闲鱼上购入了一堆72比例的田宫模型, 决定那这个开刀，因为没做过二战机也没做过田宫的模型想赶紧体验一下。开盒来看感觉这个是质量最好的之一，事实上也是如此，配合度目前我做过的最好的模型没有之一，补土根本用不着。果然自己国家的机型会更用心做。</p>\n<h2 id=\"修大件--刻铆钉\"><a href=\"#%E4%BF%AE%E5%A4%A7%E4%BB%B6--%E5%88%BB%E9%93%86%E9%92%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>修大件 + 刻铆钉</h2>\n<p><img src=\"/assets/image/reisen/2.JPG\" alt=\"2\"></p>\n<p>假组了一下，配合度非常好。</p>\n<p><img src=\"/assets/image/reisen/3.JPG\" alt=\"3\">\n<img src=\"/assets/image/reisen/4.JPG\" alt=\"4\"></p>\n<p>第一次用铆钉刻线刀，没有考证，只是按着已有刻线走一遍，纯当练手了。用的是之前凑单买的号手刻线刀，之前看了一些测评发现了一些此工具的缺点，但总体觉得还能忍受（又那么便宜）。实际上这些缺陷非常严重，也导致了立刻剁手下单其他刀。主要的：</p>\n<ul>\n<li>视野阻挡，即使我已经磨掉了一些边缘，也还是不行。</li>\n<li>轴十分的不顺滑，大力推不动，推动就推出好远。</li>\n<li>刀片半径太大， 弯曲面小的部位无法施工。</li>\n</ul>\n<p>由于是练手，质量什么的就凑合了。歪的还是挺多的， 不过并没有特别影响效果（需手动无视）。</p>\n<h2 id=\"舱内，引擎上色\"><a href=\"#%E8%88%B1%E5%86%85%EF%BC%8C%E5%BC%95%E6%93%8E%E4%B8%8A%E8%89%B2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>舱内，引擎上色</h2>\n<p><img src=\"/assets/image/reisen/5.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/6.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/7.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/8.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/9.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/10.JPG\" alt=\"4\"></p>\n<p>零式这个起落架舱的颜色竟然是金属蓝绿色，惊了。经过查证之后发现确实是这个样的，但也有些型号是普通的颜色，不知道是否符合史实，现代修复时随意上的漆也说不定。为此特地买了传说中无毒无味性能强悍的SM金属漆，前两点问题不大，但喷起来确实挺麻烦的，需要大气薄喷。说到性能强悍我就不得不吐槽了，干了有超过一星期的漆面，竟然被用过的遮盖带粘下来了！对，用过的遮盖带，并且还是大面积掉漆。真不知道哪里来的所谓强悍，就算没喷补土也不应该这样。</p>\n<h2 id=\"整体拼接上色--水贴--旧化--拉线\"><a href=\"#%E6%95%B4%E4%BD%93%E6%8B%BC%E6%8E%A5%E4%B8%8A%E8%89%B2--%E6%B0%B4%E8%B4%B4--%E6%97%A7%E5%8C%96--%E6%8B%89%E7%BA%BF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整体拼接上色 + 水贴 + 旧化 + 拉线</h2>\n<p><img src=\"/assets/image/reisen/11.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/12.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/13.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/14.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/15.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/16.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/17.JPG\" alt=\"4\">\n<img src=\"/assets/image/reisen/18.JPG\" alt=\"4\"></p>\n<p>没什么太多好说。轻度渍洗。掉漆效果做的一般，但也还可以了，毕竟也是第一次尝试。后面如果买了银色水彩笔再补上一点。拉线比想象中简单。</p>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>田宫的模型体验好评！虽然手里那些意大利代工的东西不咋地，但这个确实体现了田宫的口碑。二战机做起来很有意思，期待把屯的做完之后再来几架(BF109, 喷火, 野马... 太多 >_&#x3C;!)，不过要上1：48比例的咯，72还是太小。</p>","fields":{"slug":"零式舰战-22-型甲-1-72"},"frontmatter":{"title":"零式舰战22型甲1:72","date":"23.11.2018","category":"ScaleModel","tags":["WWII","1:72","零","IGN"],"banner":"/assets/image/reisen/14.jpg"},"timeToRead":1}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"零式舰战-22-型甲-1-72","prev":{"excerpt":"最近被这张珠海航展的图洗脑, 种下了做个J-20的草. 性感的涂装 + 淡淡的金属光泽, 简直了.\b但是这个金属光泽的涂装没见过怎么喷涂. 以前的飞机要么是纯金属色要么是各种消光半消光的飞机灰, 这种光泽貌似只属于四代机\b. 正好手里还堆了个F-22, 有必要研究下喷法了. 网上找方法没怎么找到, 唯一一个靠边的是用金属色做底漆做的F-2…","html":"<p><img src=\"/assets/image/j20.jpg\" alt=\"J20\"></p>\n<p>最近被这张珠海航展的图洗脑, 种下了做个J-20的草. 性感的涂装 + 淡淡的金属光泽, 简直了.\b但是这个金属光泽的涂装没见过怎么喷涂. 以前的飞机要么是纯金属色要么是各种消光半消光的飞机灰, 这种光泽貌似只属于四代机\b. 正好手里还堆了个F-22, 有必要研究下喷法了.</p>\n<p>网上找方法没怎么找到, 唯一一个靠边的是用金属色做底漆做的F-22, 但是效果讲真不是很明显, 可能只是为了发色, 看不出迷人的金属光泽. \b所以\b尝试一下其他方案:</p>\n<ol>\n<li>金属色 + 主色不同比例混合</li>\n<li>先主色 + 金属色薄喷</li>\n</ol>\n<p>用消光黑和金色做的实验, 操作没什么好讲的, 见图:</p>\n<img src=\"/assets/image/test_spray.jpg\" style=\"width:500px;height:600px;\">\n<p>结论:\n金属色薄喷的方法太考验技巧不说, 覆盖感也十分明显. 主色直接加入金属色混合, 效果比意料中好, 只是比例需要1:1左右. 不能太心疼金属漆. 金属漆的颗粒感可以忍受, 但还是挺烦人的. 这个不知道怎么解决, 也许需要更细腻的金属漆.</p>","id":"ad2f5a5f-2835-58a2-9148-8359159f7e39","fields":{"slug":"普通颜色加入金属光泽喷涂实验"},"frontmatter":{"date":"2018-10-05","title":"普通颜色加入金属光泽喷涂实验","category":"ScaleModel","tags":["喷涂","金属"],"banner":"/assets/image/j20.jpg"},"timeToRead":1},"next":{"excerpt":"今年6月份B站暗搓搓(反正我觉得是)上线了个\"智能防档弹幕\". 已经记不得自己是什么时候发现的了, 只是觉得有点好玩, 但也仅此而已. 现在闲着无聊, 猜测一下其原理并验证一下. 如果更无聊的话, 再做个demo. What is 智能防挡弹幕 其实就是视频中的人形区域允许弹幕从其\"底下\"穿过, 做到防止关键♂部位被文字盖住的劳什子功能. 效果见Banner, 虽然雷总没啥可挡的. 多见于尬舞区视频, 我并没有看到很多, 真的. Brain Storm…","html":"<p>今年6月份B站暗搓搓(反正我觉得是)上线了个\"智能防档弹幕\". 已经记不得自己是什么时候发现的了, 只是觉得有点好玩, 但也仅此而已. 现在闲着无聊, 猜测一下其原理并验证一下. 如果更无聊的话, 再做个demo.</p>\n<h2 id=\"what-is-智能防挡弹幕\"><a href=\"#what-is-%E6%99%BA%E8%83%BD%E9%98%B2%E6%8C%A1%E5%BC%B9%E5%B9%95\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is 智能防挡弹幕</h2>\n<p>其实就是视频中的人形区域允许弹幕从其\"底下\"穿过, 做到防止关键♂部位被文字盖住的劳什子功能. 效果见Banner, 虽然雷总没啥可挡的. 多见于尬舞区视频, 我并没有看到很多, 真的.</p>\n<h2 id=\"brain-storm\"><a href=\"#brain-storm\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Brain Storm</h2>\n<p>乍一看这个功能大体分为两部分:</p>\n<ul>\n<li>识别出视频中的目标(人形)区域</li>\n<li>用区域信息对弹幕文字进行类似mask的处理</li>\n</ul>\n<p>其实挺显而易见的, 并且两部分技术上相互独立, 可以分别解决. 前一个问题, 可以简化为Image Segmentation问题, 后一个就是遮罩样式了.</p>\n<h3 id=\"image-segmentation\"><a href=\"#image-segmentation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Segmentation</h3>\n<p>这个问题本应该是我的知识盲区, 但前两天刚刚在Udemy上看完了<a href=\"https://www.udemy.com/ros-essentials/learn/v4/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ROS和OpenCV的教程</a>, 所以算是刚好入了门. 从应用的角度来讲也没有什么火箭科学: 对视频的逐帧扫描, 用图像识别算法划分区域.</p>\n<p>例如:</p>\n<p><img src=\"/assets/image/danmaku/coins.jpg\" alt=\"before_seg\">\n<img src=\"/assets/image/danmaku/coins_seg.jpg\" alt=\"after_seg\">\n<span></span></p>\n<p>从左图到右图的segmentation, 在OpenCV中只需要几行代码即可.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">from</span> matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt\nimg <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'coins.png'</span><span class=\"token punctuation\">)</span>\ngray <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span>cv<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\nret<span class=\"token punctuation\">,</span> thresh <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>threshold<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>cv<span class=\"token punctuation\">.</span>THRESH_BINARY_INV<span class=\"token operator\">+</span>cv<span class=\"token punctuation\">.</span>THRESH_OTSU<span class=\"token punctuation\">)</span></code></pre></div>\n<p>上个例子只是最简单的Threshold分割, 对于人形的识别想必是需要更复杂的算法支持, 但原理上就是如此了. 经过一番google, 发现<a href=\"https://github.com/matterport/Mask_RCNN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mask_RCNN</a>正是用来做此事的, 不知道是否实际用的这个.</p>\n<p>到这里, 图像识别及蒙版生成的原理大概清楚了. 还有一个问题是, 对视频的生成蒙版的过程是实时的还是预处理的? 根据计算量估计应该是需要利用GPU预处理的, 但也不排除有什么前端黑科技, 毕竟Web开发什么都有可能发生. 后面验证部分再看.</p>\n<h3 id=\"遮罩样式\"><a href=\"#%E9%81%AE%E7%BD%A9%E6%A0%B7%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>遮罩样式</h3>\n<p>这个本来应该是老本行了, 但是乍一想竟然想不到用什么具体方法, 只是知道css应该可行. 实际上确实如此, css中有一个<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">mask-*</code>系列属性</a>正是用来实现遮罩效果, 据说比<code class=\"language-text\">border-radius</code>还要古老, 但似乎兼容性并不是特别理想, 只在webkit上有效.</p>\n<p>具体使用方法跟<code class=\"language-text\">background</code>类似, 可以支持普通图片和svg, 如果是图片则根据该图片的alpha通道进行遮盖. 也就是说假如用了jpg之类没alpha通道的格式, 就是全被盖住的效果了:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.mask-target</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">mask-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url(mask.png)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这个方法仅限于基于html的弹幕系统, 移动端或flash播放器要另辟蹊径了.</p>\n<h2 id=\"验证\"><a href=\"#%E9%AA%8C%E8%AF%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>验证</h2>\n<p>关于遮罩信息的生成, 无法确定B站到底采用的什么方案, 但至少可以验证是否实时的问题. 实际结果与预期相符, 每个支持智能防挡弹幕的视频都会去请求一个<code class=\"language-text\">.webmask</code>文件, 没有这个功能的视频就没有. 这个二进制文件不大不小, 3分钟的视频有2m多, 也符合性质. 证实了这一过程是经过预处理的.</p>\n<p>样式的处理, 验证起来就简单了. 打开开发工具锁定到弹幕的元素:</p>\n<p><img src=\"/assets/image/danmaku/mask_css.png\" alt=\"mask-css\">\n<img src=\"/assets/image/danmaku/mask_svg.png\" alt=\"mask-svg\"></p>\n<p>可以发现B站正是用<code class=\"language-text\">mask-*</code>来实现的此功能, 顺手拿Edge打开了一下相同视频, 果然也没有相关的开关了. Svg的信息应该来自于<code class=\"language-text\">.webmask</code>文件, 并根据时间轴加载到弹幕元素上. 这样的操作竟然没有带来很明显的负担, 如今前端的想象空间确实很大.</p>\n<p>整体来讲, 结论符合<a href=\"https://www.bilibili.com/read/cv534194/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">B站在发布这个功能时的要求</a>: 1, 仅特定视频 2, 仅限web端chrome内核. 该功能依赖于图像识别算法, 想象空间很大, 但目前实际效果可能仅在尬舞区有所体现.</p>\n<p>完. 有空再做个demo. 溜了.</p>","id":"2d88bc87-c625-5bb9-8540-6a2a23fd43b7","fields":{"slug":"b站智能防档弹幕原理分析"},"frontmatter":{"date":"2018-12-06","title":"B站'智能防档弹幕'原理分析","category":"Code","tags":["css","mask","image segmentation","弹幕"],"banner":"/assets/image/danmaku/danmaku-banner.jpg"},"timeToRead":2}}}}