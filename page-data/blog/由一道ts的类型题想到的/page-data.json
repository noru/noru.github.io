{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/由一道ts的类型题想到的","webpackCompilationHash":"25f73c53cf0fcbf12486","result":{"data":{"markdownRemark":{"html":"<p>本来是在网上闲逛看看现在有什么适配React Hooks的库, 发现有一个<a href=\"https://github.com/LeetCode-OpenSource/rxjs-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rxjs-hooks</a>还行. 竟然是LeetCode开源的, 于是就点进去看看. 发现了一个<a href=\"https://github.com/LeetCode-OpenSource/hire\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hire</a>的repo.</p>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/LeetCode-OpenSource/hire/blob/master/typescript_zh.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">编写复杂的 TypeScript 类型</a></li>\n<li><a href=\"https://github.com/LeetCode-OpenSource/hire/blob/master/webpack_zh.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">用 Webpack 实现 predictable long term cache</a></li>\n<li><a href=\"https://github.com/LeetCode-OpenSource/hire/blob/master/engineering_zh.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">编写工程化的组件</a></li>\n<li><a href=\"https://github.com/LeetCode-OpenSource/hire/blob/master/rxjs_zh.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">用 RxJS 处理复杂的异步业务</a></li>\n</ul>\n</blockquote>\n<p>3, 4做得多了没什么新鲜感, 只能感叹下现在前端招聘确实越来越注重工程化和实用性了, 没想到一个OG网站的前端题竟然没有一个是算法的. 2确实很棒, 反手就把自己项目给改了, 虽然现有的部署方式并不需要这种优化.</p>\n<p>题目1确实是挺头疼的一个实际问题. 本来以为在实际工作中用用扁平的基本类型就够用了, 但正如之前写Scala一样, 一入类型深似海啊, 各种头疼的<code class=\"language-text\">TS Error</code>. 工作中想写点骚类型看见什么<code class=\"language-text\">keyof</code>, <code class=\"language-text\">Exclude</code>, <code class=\"language-text\">Extract</code>之类就头大, 每次都疯狂搜半天. 做这个题时候正好顺便屡屡清楚.</p>\n<p>这道题的描述挺多挺复杂的, 但其实要求精简一下就是:\n写出一个<code class=\"language-text\">\b改变某个interface的某些属性的类型, 继承其他的属性</code>的类型.</p>\n<p>改来改去后我的最终答案是:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// keys of non-function props: count, message...</span>\n<span class=\"token keyword\">type</span> NonFuncKeys <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span>keyof EffectModule<span class=\"token punctuation\">,</span> keyof Connected<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// extract non-function types from original interface</span>\n<span class=\"token keyword\">type</span> NonFuncProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key <span class=\"token keyword\">in</span> NonFuncKeys<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> EffectModule<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// combine</span>\n<span class=\"token keyword\">type</span> Result <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span>NonFuncProps<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Connected</code></pre></div>\n<p>类型这种东西在js世界里很难说是严谨的, 所以满足要求的答案应该是不止一个, 并且还跟编译器版本有关. 所以关于答案就不深究了. 倒是几种关键字有必要理清除一下.</p>\n<hr>\n<h2 id=\"in\"><a href=\"#in\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>in</h2>\n<p><code class=\"language-text\">in</code>关键字是用来生成<a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Mapped types</code></a>的. 作用类似js里的<code class=\"language-text\">for ... in</code>, 只不过针对的是属性<code class=\"language-text\">key</code>值的<a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#index-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Index types</code></a>, 实际上是所有公开属性名的<a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#union-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Union type</code></a>.</p>\n<p>用<code class=\"language-text\">in</code>把一个类型的所有属性map成<code class=\"language-text\">any</code>的例子:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> ToAny<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// or...</span>\n<span class=\"token keyword\">type</span> ToAny2<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">symbol</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// map name/age to any</span>\n<span class=\"token keyword\">type</span> Result <span class=\"token operator\">=</span> ToAny<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">type</span> Result <span class=\"token operator\">=</span> ToAny2<span class=\"token operator\">&lt;</span>keyof Person<span class=\"token operator\">></span></code></pre></div>\n<hr>\n<h2 id=\"keyof\"><a href=\"#keyof\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>keyof</h2>\n<p><code class=\"language-text\">keyof</code>就是👆提到的<code class=\"language-text\">index type</code>的<code class=\"language-text\">query operator</code>, 类型经过<code class=\"language-text\">keyof</code>操作后就得到所有公开属性名的Union type</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> PersonKeys <span class=\"token operator\">=</span> keyof Person <span class=\"token comment\">// 'name' | 'age'</span></code></pre></div>\n<hr>\n<h2 id=\"tk\"><a href=\"#tk\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>T[K]</h2>\n<p>这个方括号叫<code class=\"language-text\">indexed access operator</code>. 这个很好理解了, 经这个操作可以获取类型<code class=\"language-text\">T</code>的属性key为<code class=\"language-text\">K</code>的类型</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Age <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// number</span></code></pre></div>\n<hr>\n<h2 id=\"nullable-nonnullable-partial-readonly-required\"><a href=\"#nullable-nonnullable-partial-readonly-required\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nullable, NonNullable, Partial, Readonly, Required</h2>\n<p>挺常用的工具类型, 字面意思, 没啥难度. 但是<code class=\"language-text\">Required</code>的定义就比较骚了:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Required<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">P</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -? 😲</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"pick\"><a href=\"#pick\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pick</h2>\n<p>这个就是看起来有点屌的类型的, 但其实定义并不复杂, 用法也很简单</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Droid <span class=\"token operator\">=</span> Pick<span class=\"token operator\">&lt;</span>Person<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">type</span> ClonePerson <span class=\"token operator\">=</span> Pick<span class=\"token operator\">&lt;</span>Person<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'age'</span><span class=\"token operator\">></span></code></pre></div>\n<p>还有一个<code class=\"language-text\">Record</code>, 刚好像<code class=\"language-text\">Pick</code>反过来, 生成一个所有属性都是目标类型的新类型. 不知道有啥用不写了.</p>\n<hr>\n<h2 id=\"exclude-extract\"><a href=\"#exclude-extract\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exclude, Extract</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">U</span> <span class=\"token operator\">?</span> never <span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">U</span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">:</span> never<span class=\"token punctuation\">;</span></code></pre></div>\n<p>这两个最让人头大了, 之前用的时候经常得到一个<code class=\"language-text\">never</code>. 不过在搞懂了<code class=\"language-text\">keyof</code>之后就没什么问题了. 看定义就知道这两个类型的参数必须<code class=\"language-text\">T extends U</code>, 否则就会直接丢给你个<code class=\"language-text\">never</code>. 这也就减弱了这两个方法的可用性, 在两个类型没有继承关系的时候必须要经过<code class=\"language-text\">keyof</code>转为<code class=\"language-text\">indexed type</code>和<code class=\"language-text\">Pick</code>操作才能达到字面上的效果. 这也是为啥很多库里面类型声明文件中起手就是一个<code class=\"language-text\">Omit</code>或者<code class=\"language-text\">Substract</code>.</p>\n<hr>\n<h2 id=\"t-extends-u--a-b\"><a href=\"#t-extends-u--a-b\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>T extends U ? A: B</h2>\n<p>v2.8引入的语法. 感觉会挺实用. 但是条件语句表达方式有限, 期待扩展.</p>\n<hr>\n<h2 id=\"bonus-thistypet\"><a href=\"#bonus-thistypet\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BONUS💰 ThisType&#x3C;T></h2>\n<p>这个是自己点进<code class=\"language-text\">lib.d.ts</code>里看到的, 文档里很难找到(<a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">但还是有</a>). 刚看到觉得这个可以解决<code class=\"language-text\">Vue</code>中的很多问题, 因为<code class=\"language-text\">Vue</code>项目是<code class=\"language-text\">this</code>的重度用户. 一搜果然早在v2.5就已经用上了.</p>\n<hr>\n<p>还有一些工具类型和关键字, 先不写了. 之前还有使用了<a href=\"https://forcedotcom.github.io/sfdx-dev-packages/ts-types/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">@salesforce/ts-types</code></a>, 还没来得及仔细看. 就都留到下一篇blog吧.</p>","fields":{"slug":"由一道ts的类型题想到的"},"frontmatter":{"title":"由一道ts的类型题想到的","date":"15.02.2019","category":"Code","tags":["typescript","advanced type"],"banner":"/assets/image/tstypes/tse.png"},"timeToRead":3}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"由一道ts的类型题想到的","prev":{"excerpt":"同上一个 F-117A, 也是意大利的板件田宫的标. 板件质量凑合着能用, 如果不是旋翼主轴板件竟然很蠢的弄错了尺寸需要裁剪, 还能对意呆利提升点好感. 主旋翼不能转, 尾旋翼转不舒畅. 😔 田宫为什么要跟这家凑一块啊. 跟实机对比颜色之后发现, 主色标号(XF-62)不太对, 偏浅. 于是自己用消光黑配了下, 结果感觉又偏深了, 导致水贴看不太清楚. 但总体来讲, 我还是觉得比样图好. 主旋翼的下垂感直接上手硬掰就行了, 用不着什么吹风机之类的劳什子. 本来以为上一个 F-11…","html":"<p>同上一个 F-117A, 也是意大利的板件田宫的标. 板件质量凑合着能用, 如果不是旋翼主轴板件竟然很蠢的弄错了尺寸需要裁剪, 还能对意呆利提升点好感. 主旋翼不能转, 尾旋翼转不舒畅. 😔 田宫为什么要跟这家凑一块啊.</p>\n<p>跟实机对比颜色之后发现, 主色标号(XF-62)不太对, 偏浅. 于是自己用消光黑配了下, 结果感觉又偏深了, 导致水贴看不太清楚. 但总体来讲, 我还是觉得比样图好. 主旋翼的下垂感直接上手硬掰就行了, 用不着什么吹风机之类的劳什子.</p>\n<p>本来以为上一个 F-117 是年度收官之作, 结果这个迅速做完了. 这回不但是年度收官, 还要为谋大事暂停吸各种毒气. 🎉 撒花 🎉</p>\n<h3 id=\"todo-得找到一个拍照的好方法\"><a href=\"#todo-%E5%BE%97%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E6%8B%8D%E7%85%A7%E7%9A%84%E5%A5%BD%E6%96%B9%E6%B3%95\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO: <em>得找到一个拍照的好方法!</em></h3>\n<p><img src=\"/assets/image/ah64/1.jpg\" alt=\"1\">\n<img src=\"/assets/image/ah64/2.jpg\" alt=\"2\">\n<img src=\"/assets/image/ah64/3.jpg\" alt=\"3\">\n<img src=\"/assets/image/ah64/4.jpg\" alt=\"4\">\n<img src=\"/assets/image/ah64/5.jpg\" alt=\"4\">\n<img src=\"/assets/image/ah64/6.jpg\" alt=\"4\"></p>","id":"dc46afb8-9b39-5f03-aad7-a60582cbf018","fields":{"slug":"堆积-1-意呆利ah-64-a阿帕奇-1-72"},"frontmatter":{"date":"2019-02-01","title":"[堆积-1]意呆利AH-64A阿帕奇 1:72","category":"ScaleModel","tags":["飞机","现代","直升机","Helicopter","美","1:72"],"banner":"/assets/image/ah64/1.jpg"},"timeToRead":1},"next":{"excerpt":"在测试前端解析一个比较大的 Excel 文件时候, 发现我们的 button 的 spinner 卡住了. 印象中即使线程阻塞了, 有些 GPU 加速的东西依然应该有效. 怀疑又是某种 css in js 的弱智用法(没错, 我就是讨厌 css in js). 查看了一下元素发现是用了 svg 的 animateTransform . 写法上面感觉跟 css 差不多都是一堆  +  . 难道这样也会阻塞吗? 所以做了个测试 结果是, 虽然长得像, 但 css animation…","html":"<p>在测试前端解析一个比较大的 Excel 文件时候, 发现我们的 button 的 spinner 卡住了. 印象中即使线程阻塞了, 有些 GPU 加速的东西依然应该有效. 怀疑又是某种 css in js 的弱智用法(没错, 我就是讨厌 css in js). 查看了一下元素发现是用了 svg 的<a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">animateTransform</a>. 写法上面感觉跟 css 差不多都是一堆<code class=\"language-text\">transform</code> + <code class=\"language-text\">rotate</code>. 难道这样也会阻塞吗?</p>\n<p><a href=\"https://jsbin.com/wodenoxaku/1/edit?html,css,output\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">所以做了个测试</a></p>\n<p><img src=\"/assets/image/css-svg-anim/demo.gif\" alt=\"demo\"></p>\n<p>结果是, 虽然长得像, 但 css animation 还是一等公民, 并不像<a href=\"https://stackoverflow.com/questions/25233248/gpu-accelerated-css-animation-vs-svg-native-animations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Stack Overflow 某问题</a>的评论所说<code class=\"language-text\">They are the same. UAs generally have one animation engine which does both kinds of animation</code>. css 得到了 GPU 加速但 svg 会被线程阻塞影响.</p>\n<p>由于动画, GPU 加速等等属于浏览器的自主裁量行为了, 所以测试结果并不代表什么确切的东西. 有可能未来某时刻打开测试连接结果就不一样了呢. 只能说写下本文时, 浏览器对 css 的优化优先级更高, 实践中应优先使用吧.</p>\n<hr>\n<p>如果链接挂了的话, 这是代码:</p>\n<h3 id=\"html\"><a href=\"#html\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JS Bin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>CSS spinner<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>css-spinner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Svg spinner<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0 0 44 44<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>defs</span><span class=\"token punctuation\">></span></span>Ç\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>linearGradient</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stop</span> <span class=\"token attr-name\">stop-color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#FF4F42<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">offset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>stop</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stop</span> <span class=\"token attr-name\">stop-color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#FF8E3C<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">offset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>stop</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>linearGradient</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>defs</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>translate(3 3)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill-rule</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>evenodd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>M36 18c0-9.94-8.06-18-18-18<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#000<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-linecap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>round<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>rotate(217.117 18 18)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>rotate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0 18 18<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>360 18 18<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>animateTransform</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>for (var i = 0; i &lt; 100000; i++) console.log(i)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Blocking action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"css\"><a href=\"#css\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css</h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> spin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>359deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>359deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.css-spinner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> spin 2s infinite linear<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 6px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-right-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-bottom-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-top-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","id":"1e2096f5-8829-54de-ba90-e6a8c261a425","fields":{"slug":"小事儿-线程阻塞对css-animation和svg-animation的影响"},"frontmatter":{"date":"2019-03-06","title":"小事儿: 线程阻塞对css animation和svg animation的影响","category":"Code","tags":["css","svg","animation","小事儿"],"banner":"/assets/image/css-svg-anim/spinner-blocked.png"},"timeToRead":2}}}}